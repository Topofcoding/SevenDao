{"version":3,"sources":["constants/blockchain.ts","constants/addresses.ts","constants/messages.ts","helpers/switch-network.ts","hooks/web3/web3-context.tsx","hooks/web3/helpers/get-mainnet-uri.ts","helpers/trim.ts","assets/image/logo.png","helpers/set-all.ts","helpers/sleep.ts","helpers/pretty-date.ts","store/slices/app-slice.ts","store/slices/account-slice.ts","components/LandingLayout/layout.styles.ts","components/Container.tsx","components/LandingLayout/LandingFooter.tsx","components/Button/Button.tsx","components/AppLayout/applayout.styles.ts","components/AppLayout/Sidebar.tsx","components/LandingLayout/LandingHeader.tsx","views/Landing/landing.styles.ts","views/Landing/LandingAbout.tsx","views/Landing/LandingCardGroup.tsx","views/Landing/LandingIntro.tsx","views/Landing/LandingQuestion.tsx","views/Landing/LandingView.tsx","assets/image/metamask.svg","components/Header/connect-button/index.tsx","components/AppLayout/AppHeader.tsx","views/AppView/appview.styles.ts","components/AppLayout/AppFooter.tsx","assets/image/skeleton.gif","store/slices/pending-txns-slice.ts","store/slices/messages-slice.ts","helpers/get-gas-price.ts","helpers/metamask-error-wrap.ts","store/slices/mint-slice.ts","views/AppView/AppView.tsx","Root/App.tsx","Root/index.tsx","store/store.ts","components/Messages/snackbar.tsx","index.tsx"],"names":["Networks","DEFAULD_NETWORK","MATIC","MATIC_MAINNET","SVC_ADDRESS","DAO_ADDRESS","DAI_ADDRESS","getAddresses","networkID","Error","messages","switchRequest","window","ethereum","request","method","params","chainId","swithNetwork","a","code","chainName","rpcUrls","blockExplorerUrls","nativeCurrency","name","symbol","decimals","console","log","Web3Context","React","createContext","useWeb3Context","web3Context","useContext","onChainProvider","useMemo","Web3ContextProvider","children","useDispatch","useState","connected","setConnected","chainID","providerChainID","setProviderChainID","address","setAddress","uri","StaticJsonRpcProvider","provider","setProvider","Web3Modal","cacheProvider","providerOptions","walletconnect","package","WalletConnectProvider","options","rpc","web3Modal","hasCachedProvider","cachedProvider","_initListeners","useCallback","rawProvider","on","setTimeout","location","reload","chain","changeNetwork","_newNetwork","oldNetwork","otherChainID","network","Number","connect","connectedProvider","Web3Provider","getNetwork","then","getSigner","getAddress","connectedAddress","checkWrongNetwork","confirm","disconnect","clearCachedProvider","Provider","value","trim","number","precision","array","fromExponential","split","length","push","pop","substring","trimmedNumber","join","setAll","state","properties","Object","keys","forEach","key","sleep","seconds","Promise","resolve","prettyDate","timestamp","date","Date","getDate","getMonth","getFullYear","loadAppDetails","createAsyncThunk","addresses","daoContract","ethers","Contract","DaoContract","getTotalNodes","totalNodeNum","toNumber","svcContract","SVCContract","balanceOf","Math","pow","svcDaoBalance","appSlice","createSlice","initialState","loading","reducers","fetchAppSuccess","action","payload","extraReducers","builder","addCase","pending","fulfilled","rejected","error","loadAccountDetails","actions","createSelector","app","svcBalance","allowance","svcAllowed","daiContract","DaiContract","daiBalance","daiAllowed","getAccount","nodes","numNodes","lastWithdraw","estimateInterestToWithdraw","claimableReward","isWithdrawalAvailable","withdrawAvailable","balances","svc","dai","Array","accountSlice","fetchAccountSuccess","account","LandingHeaderWrapper","styled","div","LandingHeaderContainer","NavbarWrapper","NavbarItem","Link","LandingFooterWrapper","LandingFooterContainer","SocialLinkGroup","SocialLink","ContainerWrapper","Container","LandingFooter","className","ButtonWrapper","disabled","Button","label","onClick","AppHeaderWrapper","SidebarBtn","SidebarClose","AppNavbarWrapper","HeaderTitle","NavbarLinkGroup","NavbarLink","active","AppFooterWrapper","AppSidebarWrapper","SidebarOverLay","Sidebar","LandingHeader","sidebar","setSidebar","router","useHistory","handleScroll","header","document","querySelector","documentElement","scrollTop","style","boxShadow","useEffect","addEventListener","removeEventListener","id","color","to","LandingViewWrapper","LandingIntroWrapper","LandingContainer","IntroContainer","IntroImageContainer","CardGroupWrapper","CardWrapper","LandingAboutWrapper","AboutTitle","TabWrapper","TabContainer","TabButton","TabContent","TabList","ListNum","ListContent","LandingQuestionWrapper","SectionTitle","QestionCardGrid","QuestionCardWrapper","IconWrapper","QuestionCardContent","TabButtonGroup","selected","setSelected","handleClick","title","map","item","AboutTypes","desc","AboutProtocol","AboutAuto","LandingAbout","tab","setTab","cardData","Card","LandingCardGroup","LandingIntro","src","logoImg","alt","QuestionCard","icon","LandingQuestion","LandingView","ConnectMenu","web3","isConnected","pendingTransactions","useSelector","buttonText","clickFunc","CircularProgress","size","AppHeader","metamaskImg","AppViewWrapper","AppCardGroup","repeat","padding","AppCardWrapper","Divider","ModalHeader","ModalContainer","ModalFooter","MintFormWrapper","FormLabel","MintForm","AppFooter","href","pendingTxnsSlice","fetchPendingTxns","clearPendingTxn","target","find","x","txnHash","splice","indexOf","createMessage","severity","text","message","messagesSlice","info","warning","success","close","getGasPrice","gasPrice","convertGas","utils","parseUnits","add","metamaskErrorWrap","err","dispatch","data","includes","changeApproval","token","amount","signer","tokenContract","amountToApprove","String","approve","approveTx","hash","type","wait","mintNode","displayName","valueInWei","mintTx","claimReward","withdrawInterest","claimTx","AppCard","content","position","top","left","transform","width","bgcolor","borderRadius","NodeModal","onCancel","TableData","nodeType","rewardAmount","node","created","rewards","rows","i","Table","TableHead","TableRow","borderBottom","TableCell","fontWeight","align","TableBody","row","component","scope","MintModal","RowData","tokenAmount","flag","setFlag","setSelect","setTokenAmount","handleMint","handleProvideSVC","handleProvideDAI","FormControl","Select","labelId","onChange","event","MenuItem","AppView","isloading","cardData2","skeletonSVG","cardData3","open","setOpen","modal","setModal","handleOpen","handleClose","paddingBottom","paddingTop","Modal","onClose","Box","sx","App","loadDetails","whichDetails","loadProvider","loadApp","loadAccount","exact","path","Root","store","configureStore","reducer","accountReducer","appReducer","pendingTransactionsReducer","messagesReducer","middleware","getDefaultMiddleware","serializableCheck","useStyles","makeStyles","theme","root","breakpoints","up","minWidth","card","backgroundColor","typography","fontFamily","actionRoot","justifyContent","icons","marginLeft","expand","transition","transitions","create","duration","shortest","expandOpen","collapse","checkIcon","fontSize","paddingRight","checkIconCopy","button","textTransform","errorWrap","marginTop","errorText","whiteSpace","maxHeight","overflow","background","SnackMessage","forwardRef","props","ref","classes","closeSnackbar","useSnackbar","expanded","setExpanded","isCopy","setIsCopy","handleExpandClick","oldExpanded","handleDismiss","classnames","CardActions","getIcon","Typography","variant","IconButton","Collapse","in","timeout","unmountOnExit","Paper","JSON","stringify","onCopy","ReactDOM","render","maxSnack","anchorOrigin","vertical","horizontal","parse","autoHideDuration","getElementById"],"mappings":"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","file":"static/js/main.6c20af6a.chunk.js","sourcesContent":["export const TOKEN_DECIMALS = 18;\n\nexport enum Networks {\n    MATIC = 80001,\n}\n\nexport const DEFAULD_NETWORK = Networks.MATIC;\n","import { Networks } from \"./blockchain\";\n\nconst MATIC_MAINNET = {\n    SVC_ADDRESS:\"0xA1C8501594aB44B91ed17590B958F79f92E78399\",\n    DAO_ADDRESS:\"0x6476Be61EAd686BB8f39436F3878b2b33C888050\",\n    DAI_ADDRESS:\"0x9C66AEa9A07e6A1C6740b07c238e583aBda45845\"\n};\n\nexport const getAddresses = (networkID: number) => {\n    if (networkID === Networks.MATIC) return MATIC_MAINNET;\n    throw Error(\"Network don't support\");\n};\n","export const messages = {\n    please_connect: \"Please connect your wallet to the Polygon network to use Seven Dao.\",\n    please_connect_wallet: \"Please connect your wallet.\",\n    before_minting: \"Before minting, enter a value.\",\n    tx_successfully_send: \"Your transaction was successfully sent\",\n    your_balance_updated: \"Your balance was successfully updated\",\n    nothing_to_claim: \"You have nothing to claim\",\n    something_wrong: \"Something went wrong\",\n    switch_to_polygon: \"Switch to the Polygon network?\",\n    your_balance_update_soon: \"Your balance will update soon\",\n};\n","import { Networks } from \"../constants/blockchain\";\n\nconst switchRequest = () => {\n    return window.ethereum.request({\n        method: \"wallet_switchEthereumChain\",\n        params: [{ chainId: \"0x13881\" }],\n    });\n};\n\nconst addChainRequest = () => {\n    return window.ethereum.request({\n        method: \"wallet_addEthereumChain\",\n        params: [\n            {\n                chainId: \"0x13881\",\n                chainName: \"Mumbai\",\n                rpcUrls: [\"https://matic-mumbai.chainstacklabs.com\"],\n                blockExplorerUrls: [\"https://mumbai.polygonscan.com\"],\n                nativeCurrency: {\n                    name: \"MATIC\",\n                    symbol: \"MATIC\",\n                    decimals: 18,\n                },\n            },\n        ],\n    });\n};\n\n\n// const switchRequest = () => {\n//     return window.ethereum.request({\n//         method: \"wallet_switchEthereumChain\",\n//         params: [{ chainId: \"0x89\" }],\n//     });\n// };\n\n// const addChainRequest = () => {\n//     return window.ethereum.request({\n//         method: \"wallet_addEthereumChain\",\n//         params: [\n//             {\n//                 chainId: \"0x89\",\n//                 chainName: \"Polygon Mainnet\",\n//                 rpcUrls: [\"https://polygon-rpc.com/\"],\n//                 blockExplorerUrls: [\"https://polygonscan.com\"],\n//                 nativeCurrency: {\n//                     name: \"MATIC\",\n//                     symbol: \"MATIC\",\n//                     decimals: 18,\n//                 },\n//             },\n//         ],\n//     });\n// };\n\n\nexport const swithNetwork = async () => {\n    if (window.ethereum) {\n        try {\n            await switchRequest();\n        } catch (error: any) {\n            if (error.code === 4902) {\n                try {\n                    await addChainRequest();\n                    await switchRequest();\n                } catch (addError) {\n                    console.log(error);\n                }\n            }\n            console.log(error);\n        }\n    }\n};\n","import React, { useState, ReactElement, useContext, useMemo, useCallback } from \"react\";\nimport Web3Modal from \"web3modal\";\nimport { StaticJsonRpcProvider, JsonRpcProvider, Web3Provider } from \"@ethersproject/providers\";\nimport WalletConnectProvider from \"@walletconnect/web3-provider\";\nimport { getMainnetURI } from \"./helpers\";\nimport { DEFAULD_NETWORK } from \"../../constants\";\nimport { Networks } from \"../../constants\";\nimport { messages } from \"../../constants/messages\";\nimport { useDispatch } from \"react-redux\";\nimport { swithNetwork } from \"../../helpers/switch-network\";\n\ntype onChainProvider = {\n    connect: () => Promise<Web3Provider>;\n    disconnect: () => void;\n    checkWrongNetwork: () => Promise<boolean>;\n    provider: JsonRpcProvider;\n    address: string;\n    connected: Boolean;\n    web3Modal: Web3Modal;\n    chainID: number;\n    web3?: any;\n    providerChainID: number;\n    hasCachedProvider: () => boolean;\n};\n\nexport type Web3ContextData = {\n    onChainProvider: onChainProvider;\n} | null;\n\nconst Web3Context = React.createContext<Web3ContextData>(null);\n\nexport const useWeb3Context = () => {\n    const web3Context = useContext(Web3Context);\n    if (!web3Context) {\n        throw new Error(\"useWeb3Context() can only be used inside of <Web3ContextProvider />, \" + \"please declare it at a higher level.\");\n    }\n    const { onChainProvider } = web3Context;\n    return useMemo(() => {\n        return { ...onChainProvider };\n    }, [web3Context]);\n};\n\nexport const useAddress = () => {\n    const { address } = useWeb3Context();\n    return address;\n};\n\nexport const Web3ContextProvider: React.FC<{ children: ReactElement }> = ({ children }) => {\n    const dispatch = useDispatch();\n\n    const [connected, setConnected] = useState(false);\n    const [chainID, setChainID] = useState(DEFAULD_NETWORK);\n    const [providerChainID, setProviderChainID] = useState(DEFAULD_NETWORK);\n    const [address, setAddress] = useState(\"\");\n\n    const [uri, setUri] = useState(getMainnetURI());\n    const [provider, setProvider] = useState<JsonRpcProvider>(new StaticJsonRpcProvider(uri));\n\n    const [web3Modal] = useState<Web3Modal>(\n        new Web3Modal({\n            cacheProvider: true,\n            providerOptions: {\n                walletconnect: {\n                    package: WalletConnectProvider,\n                    options: {\n                        rpc: {\n                            [Networks.MATIC]: getMainnetURI(),\n                        },\n                    },\n                },\n            },\n        }),\n    );\n\n    const hasCachedProvider = (): boolean => {\n        if (!web3Modal) return false;\n        if (!web3Modal.cachedProvider) return false;\n        return true;\n    };\n\n    const _initListeners = useCallback(\n        (rawProvider: JsonRpcProvider) => {\n            if (!rawProvider.on) {\n                return;\n            }\n\n            rawProvider.on(\"accountsChanged\", () => setTimeout(() => window.location.reload(), 1));\n\n            rawProvider.on(\"chainChanged\", async (chain: number) => {\n                changeNetwork(chain);\n            });\n\n            rawProvider.on(\"network\", (_newNetwork, oldNetwork) => {\n                if (!oldNetwork) return;\n                window.location.reload();\n            });\n        },\n        [provider],\n    );\n\n    const changeNetwork = async (otherChainID: number) => {\n        const network = Number(otherChainID);\n\n        setProviderChainID(network);\n    };\n\n    const connect = useCallback(async () => {\n        const rawProvider = await web3Modal.connect();\n\n        _initListeners(rawProvider);\n\n        const connectedProvider = new Web3Provider(rawProvider, \"any\");\n\n        const chainId = await connectedProvider.getNetwork().then(network => Number(network.chainId));\n        const connectedAddress = await connectedProvider.getSigner().getAddress();\n\n        setAddress(connectedAddress);\n\n        setProviderChainID(chainId);\n\n        if (chainId === Networks.MATIC) {\n            setProvider(connectedProvider);\n        }\n\n        setConnected(true);\n\n        return connectedProvider;\n    }, [provider, web3Modal, connected]);\n\n    const checkWrongNetwork = async (): Promise<boolean> => {\n        if (providerChainID !== DEFAULD_NETWORK) {\n            const shouldSwitch = window.confirm(messages.switch_to_polygon);\n            if (shouldSwitch) {\n                await swithNetwork();\n                window.location.reload();\n            }\n            return true;\n        }\n\n        return false;\n    };\n\n    const disconnect = useCallback(async () => {\n        web3Modal.clearCachedProvider();\n        setConnected(false);\n\n        setTimeout(() => {\n            window.location.reload();\n        }, 1);\n    }, [provider, web3Modal, connected]);\n\n    const onChainProvider = useMemo(\n        () => ({\n            connect,\n            disconnect,\n            hasCachedProvider,\n            provider,\n            connected,\n            address,\n            chainID,\n            web3Modal,\n            providerChainID,\n            checkWrongNetwork,\n        }),\n        [connect, disconnect, hasCachedProvider, provider, connected, address, chainID, web3Modal, providerChainID],\n    );\n    //@ts-ignore\n    return <Web3Context.Provider value={{ onChainProvider }}>{children}</Web3Context.Provider>;\n};\n","export const getMainnetURI = (): string => {\n    return \"https://api.avax.network/ext/bc/C/rpc\";\n};\n","import fromExponential from \"from-exponential\";\n\nexport const trim = (number: number = 0, precision?: number) => {\n    const array = fromExponential(number).split(\".\");\n    if (array.length === 1) return fromExponential(number);\n    //@ts-ignore\n    array.push(array.pop().substring(0, precision));\n    const trimmedNumber = array.join(\".\");\n    return trimmedNumber;\n};\n","export default __webpack_public_path__ + \"static/media/logo.b95bd8d8.png\";","export const setAll = (state: any, properties: any) => {\n    const props = Object.keys(properties);\n    props.forEach(key => {\n        state[key] = properties[key];\n    });\n};\n","export const sleep = (seconds: number) => {\n    return new Promise(resolve => setTimeout(() => resolve(null), seconds * 1000));\n};\n","export const prettyDate = ( timestamp : number) => {\r\n    let date = new Date(timestamp * 1000);\r\n    return (date.getDate() + '/' + (date.getMonth()+1) + '/' + date.getFullYear())\r\n}","import { BigNumber, ethers } from \"ethers\";\n\nimport { getAddresses } from \"../../constants\";\nimport { DaoContract, SVCContract } from \"../../abi\";\nimport { setAll } from \"../../helpers\";\nimport { createSlice, createSelector, createAsyncThunk } from \"@reduxjs/toolkit\";\nimport { JsonRpcProvider } from \"@ethersproject/providers\";\nimport { RootState } from \"../store\";\n\ninterface ILoadAppDetails {\n    networkID: number;\n    provider: JsonRpcProvider;\n}\n\nexport const loadAppDetails = createAsyncThunk(\n    \"app/loadAppDetails\",\n    //@ts-ignore\n    async ({ networkID, provider }: ILoadAppDetails) => {\n\n        const addresses = getAddresses(networkID);\n\n        const daoContract = new ethers.Contract( addresses.DAO_ADDRESS, DaoContract, provider);\n        const totalNodeNum =  (await daoContract.getTotalNodes()).toNumber();\n        const svcContract = new ethers.Contract( addresses.SVC_ADDRESS, SVCContract, provider);\n        const svcDaoBalance = (await svcContract.balanceOf( addresses.DAO_ADDRESS )) / Math.pow(10,18);\n\n        return {\n            totalNodeNum: totalNodeNum,\n            svcDaoBalance: svcDaoBalance\n        };\n    },\n);\n\nconst initialState = {\n    loading: true,\n};\n\nexport interface IAppSlice {\n    totalNodeNum: number;\n    svcDaoBalance: number;\n    loading: boolean;\n}\n\nconst appSlice = createSlice({\n    name: \"app\",\n    initialState,\n    reducers: {\n        fetchAppSuccess(state, action) {\n            setAll(state, action.payload);\n        },\n    },\n    extraReducers: builder => {\n        builder\n            .addCase(loadAppDetails.pending, (state, action) => {\n                state.loading = true;\n            })\n            .addCase(loadAppDetails.fulfilled, (state, action) => {\n                setAll(state, action.payload);\n                state.loading = false;\n            })\n            .addCase(loadAppDetails.rejected, (state, { error }) => {\n                state.loading = false;\n                console.log(error);\n            });\n    },\n});\n\nconst baseInfo = (state: RootState) => state.app;\n\nexport default appSlice.reducer;\n\nexport const { fetchAppSuccess } = appSlice.actions;\n\nexport const getAppState = createSelector(baseInfo, app => app);\n","import { ethers } from \"ethers\";\nimport { getAddresses } from \"../../constants\";\nimport { SVCContract} from \"../../abi\";\nimport { DaiContract } from \"../../abi\";\nimport { DaoContract } from \"../../abi\";\nimport { setAll } from \"../../helpers\";\n\nimport { createSlice, createSelector, createAsyncThunk } from \"@reduxjs/toolkit\";\nimport { JsonRpcProvider, StaticJsonRpcProvider } from \"@ethersproject/providers\";\nimport { Networks } from \"../../constants/blockchain\";\nimport { RootState } from \"../store\";\nimport { trim } from \"../../helpers\"\ninterface ILoadAccountDetails {\n    address: string;\n    networkID: Networks;\n    provider: StaticJsonRpcProvider | JsonRpcProvider;\n}\n\ninterface IUserAccountDetails {\n    balances: {\n        svc: number;\n        svcAllowed: number;\n        dai: number;\n        daiAllowed: number;\n        withdrawAvailable: boolean;\n        nodes: Array<any>;\n        numNodes: number;\n        lastWithdraw: number;\n        claimableReward: string;\n    };\n}\n\nexport const loadAccountDetails = createAsyncThunk(\"account/loadAccountDetails\", async ({ networkID, provider, address }: ILoadAccountDetails): Promise<IUserAccountDetails> => {\n    \n    \n    const addresses = getAddresses(networkID);\n    const svcContract = new ethers.Contract(addresses.SVC_ADDRESS, SVCContract, provider);\n    const svcBalance = (await svcContract.balanceOf(address)) / Math.pow(10,18);\n    const svcAllowed = (await svcContract.allowance(address, addresses.DAO_ADDRESS)) / Math.pow(10,18);\n\n    const daiContract = new ethers.Contract(addresses.DAI_ADDRESS,DaiContract,provider);\n    const daiBalance = (await daiContract.balanceOf(address)) / Math.pow(10,18);\n    const daiAllowed = (await daiContract.allowance(address, addresses.DAO_ADDRESS)) / Math.pow(10,18);\n    const daoContract = new ethers.Contract(addresses.DAO_ADDRESS, DaoContract, provider);\n    const [nodes,numNodes,lastWithdraw,] = await daoContract.getAccount(address);\n\n    const claimableReward = (await daoContract.estimateInterestToWithdraw(address)) / Math.pow(10,18);\n    const withdrawAvailable = (await daoContract.isWithdrawalAvailable(address));\n    return {\n        balances: {\n            svc: svcBalance,\n            svcAllowed: svcAllowed,\n            dai: daiBalance,\n            daiAllowed: daiAllowed,\n            withdrawAvailable: withdrawAvailable,\n            nodes: nodes,\n            numNodes: numNodes.toNumber(),\n            lastWithdraw:  lastWithdraw.toNumber(),\n            claimableReward: trim(claimableReward,5)\n        },\n    };\n});\n\n\nexport interface IAccountSlice {   \n    balances: {\n        svc: string;\n        svcAllowed: string;\n        dai: string;\n        daiAllowed: string;\n        withdrawAvailable: boolean;\n        nodes: any;\n        numNodes: number;\n        claimableReward: number;\n    };\n    loading: boolean;\n}\n\nconst initialState: IAccountSlice = {\n    loading: true,\n    balances: { svc: \"\",svcAllowed: \"\", dai:\"\", daiAllowed: \"\",withdrawAvailable: false, numNodes: 0, claimableReward: 0,  nodes: Array<any>() }\n};\n\nconst accountSlice = createSlice({\n\n    name: \"account\",\n    initialState,\n    reducers: {\n        fetchAccountSuccess(state, action) {\n            setAll(state, action.payload);\n        },\n    },\n    extraReducers: builder => {\n        builder\n            .addCase(loadAccountDetails.pending, state => {\n                state.loading = true;\n            })\n            .addCase(loadAccountDetails.fulfilled, (state, action) => {\n                setAll(state, action.payload);\n                state.loading = false;\n            })\n            .addCase(loadAccountDetails.rejected, (state, { error }) => {\n                state.loading = false;\n                console.log(error);\n            })\n    },\n});\n\nexport default accountSlice.reducer;\n\nexport const { fetchAccountSuccess } = accountSlice.actions;\n\nconst baseInfo = (state: RootState) => state.account;\n\nexport const getAccountState = createSelector(baseInfo, account => account);\n","import { Link } from \"react-router-dom\";\r\nimport styled from \"styled-components\";\r\n\r\nexport const LandingHeaderWrapper = styled.div`\r\n    transition: all 0.3s;\r\n    position: fixed;\r\n    width: 100%;\r\n    top: 0;\r\n    left: 0;\r\n    background-color: #fff;\r\n    z-index: 999;\r\n`;\r\n\r\nexport const LandingHeaderContainer = styled.div`\r\n    display: flex;\r\n    height: 76px;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n`;\r\n\r\nexport const NavbarWrapper = styled.div`\r\n    display: flex;\r\n    align-items: center;\r\n    @media screen and (max-width: 1024px) {\r\n        display: none;\r\n    }\r\n`;\r\n\r\nexport const LogoWrapper = styled.div`\r\n    width: 50px;\r\n    height: auto;\r\n    img {\r\n        width: 100%;\r\n    }\r\n`;\r\n\r\nexport const NavbarItem = styled(Link)`\r\n    display: block;\r\n    text-decoration: none;\r\n    font-weight: 500;\r\n    cursor: pointer;\r\n    font-size: 1rem;\r\n    line-height: 60px;\r\n    transition: all 0.3s;\r\n    color: #03032d;\r\n    padding: 0.5rem 1rem;\r\n    padding-right: 0.8rem;\r\n    padding-left: 0.8rem;\r\n    :hover {\r\n        color: rgb(24, 104, 183);\r\n    }\r\n`;\r\n\r\nexport const LandingFooterWrapper = styled.div`\r\n    background-color: rgb(24, 104, 183);\r\n    border-top: 1px solid #e2e8f0;\r\n`;\r\n\r\nexport const LandingFooterContainer = styled.div`\r\n    height: 65px;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: space-between;\r\n    p {\r\n        margin: 0;\r\n        color: rgba(255, 255, 255, 0.5);\r\n    }\r\n`;\r\n\r\nexport const SocialLinkGroup = styled.div`\r\n    display: flex;\r\n`;\r\n\r\nexport const SocialLink = styled.div`\r\n    width: 32px;\r\n    height: 32px;\r\n    color: rgb(24, 104, 183);\r\n    border-radius: 999px;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    margin-right: 8px;\r\n    background-color: #fff;\r\n    transition: all 0.3s;\r\n    :hover {\r\n        background-color: #c4d9f7;\r\n    }\r\n`;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst ContainerWrapper = styled.div`\r\n    max-width: 1200px;\r\n    width: 95%;\r\n    margin: auto;\r\n`;\r\n\r\nconst Container: React.FC = ({ children }) => {\r\n    return <ContainerWrapper>{children}</ContainerWrapper>;\r\n};\r\n\r\nexport default Container;\r\n","import React from \"react\";\r\nimport { LandingFooterContainer, LandingFooterWrapper, SocialLink, SocialLinkGroup } from \"./layout.styles\";\r\nimport Container from \"../Container\";\r\n\r\nconst LandingFooter = () => {\r\n    return (\r\n        <LandingFooterWrapper>\r\n            <Container>\r\n                <LandingFooterContainer>\r\n                    <SocialLinkGroup>\r\n                        <SocialLink>\r\n                            <i className=\"bi bi-discord\"></i>\r\n                        </SocialLink>\r\n                        <SocialLink>\r\n                            <i className=\"bi bi-twitter\"></i>\r\n                        </SocialLink>\r\n                    </SocialLinkGroup>\r\n                    {/* <p>{new Date().getFullYear()} ❤️ SVC</p> */}\r\n                </LandingFooterContainer>\r\n            </Container>\r\n        </LandingFooterWrapper>\r\n    );\r\n};\r\n\r\nexport default LandingFooter;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\ninterface ButtonProps {\r\n    label: string;\r\n    onClick: VoidFunction;\r\n    disabled?: boolean;\r\n}\r\n\r\nconst ButtonWrapper = styled.div<{disabled?: boolean}>`\r\n    background-color: ${({disabled}) => disabled ? \"rgba(24, 104, 183, 0.8)\" :\"rgb(24, 104, 183)\" };\r\n    border-color: rgb(24, 104, 183);\r\n    height: 40px;\r\n    display: flex;\r\n    align-items: center;\r\n    color: #ffffff;\r\n    /* margin-right: 0.5rem;\r\n    margin-left: 0.5rem; */\r\n    padding: 0.5rem 1.25rem;\r\n    font-size: 0.875rem;\r\n    border-radius: 0.2rem;\r\n    border: 1px solid transparent;\r\n    transition: color 0.15s ease-in-out, background-color 0.15s ease-in-out, border-color 0.15s ease-in-out, box-shadow 0.15s ease-in-out;\r\n    font-weight: 500;\r\n    cursor: pointer;\r\n    line-height: 1.7;\r\n    :hover {\r\n        background-color: rgba(24, 104, 183, 0.8);\r\n        border-color: rgba(24, 104, 183, 0.8);\r\n    }\r\n`;\r\n\r\nconst Button: React.FC<ButtonProps> = ({ label, onClick, disabled }) => {\r\n    return <ButtonWrapper onClick={disabled ? () => {} : onClick} disabled={disabled}>{label}</ButtonWrapper>;\r\n};\r\n\r\nexport default Button;\r\n","import styled from \"styled-components\";\r\n\r\nexport const AppHeaderWrapper = styled.div`\r\n    display: flex;\r\n    padding: 8px 12px;\r\n    background-color: rgb(24, 104, 183);\r\n    position: fixed;\r\n    width: 100%;\r\n    top: 0;\r\n    right: 0;\r\n    left: 0;\r\n    z-index: 999;\r\n    justify-content: space-between;\r\n`;\r\n\r\nexport const SidebarBtn = styled.div`\r\n    cursor: pointer;\r\n    color: white;\r\n    font-size: 24px;\r\n    display: none;\r\n    @media screen and (max-width: 1024px) {\r\n        display: block;\r\n    }\r\n`;\r\n\r\nexport const SidebarClose = styled.div`\r\n    cursor: pointer;\r\n    color: white;\r\n    font-size: 24px;\r\n    position: absolute;\r\n    right: 20px;\r\n    top: 20px;\r\n`;\r\n\r\nexport const AppNavbarWrapper = styled.div`\r\n    display: flex;\r\n    @media screen and (max-width: 1024px) {\r\n        display: none;\r\n    }\r\n`;\r\n\r\nexport const HeaderTitle = styled.div`\r\n    color: #fff;\r\n    padding-top: 0.3125rem;\r\n    padding-bottom: 0.3125rem;\r\n    font-size: 1.25rem;\r\n    margin-right: 16px;\r\n`;\r\n\r\nexport const NavbarLinkGroup = styled.div`\r\n    display: flex;\r\n`;\r\n\r\nexport const NavbarLink = styled.div<{ active?: boolean }>`\r\n    display: flex;\r\n    align-items: center;\r\n    color: ${({ active }) => (active ? \"#fff\" : \"rgba(255,255,255, 0.55)\")};\r\n    padding: 0.5rem;\r\n    font-size: 1rem;\r\n    font-weight: 400;\r\n    line-height: 1.5;\r\n    img {\r\n        width: 25px;\r\n    }\r\n`;\r\n\r\nexport const AppFooterWrapper = styled.div`\r\n    display: flex;\r\n    text-align: center;\r\n    justify-content: center;\r\n    align-items: center;\r\n\r\n    & > * {\r\n        text-decoration: none;\r\n        color: #000;\r\n        cursor: pointer;\r\n        padding: 20px 5px;\r\n    }\r\n`;\r\n\r\nexport const AppSidebarWrapper = styled.div<{ active: boolean }>`\r\n    display: none;\r\n    @media screen and (max-width: 1024px) {\r\n        position: fixed;\r\n        max-width: 320px;\r\n        background-color: rgb(0, 80, 183);\r\n\r\n        width: 100%;\r\n        height: 100%;\r\n        transition: all 0.3s;\r\n        z-index: 9999;\r\n        top: 0;\r\n        left: ${({ active }) => (active ? 0 : \"-320px\")};\r\n        padding: 70px 40px;\r\n    }\r\n`;\r\n\r\nexport const SidebarOverLay = styled.div<{ active: boolean }>`\r\n    display: none;\r\n    @media screen and (max-width: 1024px) {\r\n        position: fixed;\r\n        top: 0;\r\n        left: 0;\r\n        width: 100%;\r\n        height: 100%;\r\n        transition: all 0.3s;\r\n        z-index: 9998;\r\n        background-color: #00000080;\r\n        opacity: ${({ active }) => (active ? 1 : 0)};\r\n        visibility: ${({ active }) => (active ? \"visible\" : \"hidden\")};\r\n    }\r\n`;\r\n","import React from \"react\";\r\nimport { AppSidebarWrapper, SidebarOverLay } from \"./applayout.styles\";\r\n\r\nconst Sidebar: React.FC<any> = ({ active, onClick, children }) => {\r\n    return (\r\n        <>\r\n            <AppSidebarWrapper active={active}>{children}</AppSidebarWrapper>\r\n            <SidebarOverLay active={active} onClick={onClick} />\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Sidebar;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { LandingHeaderContainer, LandingHeaderWrapper, LogoWrapper, NavbarItem, NavbarWrapper } from \"./layout.styles\";\r\nimport Container from \"../Container\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\n\r\nimport logoImg from \"../../assets/image/logoN.png\";\r\nimport Button from \"../Button/Button\";\r\nimport { SidebarBtn, SidebarClose } from \"../AppLayout/applayout.styles\";\r\nimport Sidebar from \"../AppLayout/Sidebar\";\r\n\r\nconst LandingHeader: React.FC = () => {\r\n    const [sidebar, setSidebar] = useState(false);\r\n    const router = useHistory();\r\n    const handleScroll = () => {\r\n        const header: any = document.querySelector(\"#landing-header\");\r\n        if (document.documentElement.scrollTop > 0) {\r\n            header.style.boxShadow = \"0 1rem 3rem rgb(31 45 61 / 13%)\";\r\n        } else {\r\n            header.style.boxShadow = \"none\";\r\n        }\r\n    };\r\n    useEffect(() => {\r\n        document.addEventListener(\"scroll\", handleScroll);\r\n        return () => {\r\n            document.removeEventListener(\"scroll\", handleScroll);\r\n        };\r\n    }, []);\r\n\r\n    return (\r\n        <>\r\n            <LandingHeaderWrapper id=\"landing-header\">\r\n                <Container>\r\n                    <LandingHeaderContainer>\r\n                        <SidebarBtn style={{ color: \"#000\" }} onClick={() => setSidebar(true)}>\r\n                            <i className=\"bi bi-text-indent-right\"></i>\r\n                        </SidebarBtn>\r\n                        <NavbarWrapper>\r\n                            <NavbarItem to=\"/app\">App</NavbarItem>\r\n                            <NavbarItem to=\"\">Buy SVC</NavbarItem>\r\n                            <NavbarItem to=\"\">Discord</NavbarItem>\r\n                            <NavbarItem to=\"\">Twitter</NavbarItem>\r\n                            <NavbarItem to=\"\">Medium</NavbarItem>\r\n                            <NavbarItem to=\"\">Docs</NavbarItem>\r\n                            <NavbarItem to=\"\">Contracts</NavbarItem>\r\n                        </NavbarWrapper>\r\n                        <Button\r\n                            label=\"Open the app\"\r\n                            onClick={() => {\r\n                                router.push(\"/app\");\r\n                            }}\r\n                        />\r\n                    </LandingHeaderContainer>\r\n                </Container>\r\n            </LandingHeaderWrapper>\r\n            <Sidebar active={sidebar} onClick={() => setSidebar(false)}>\r\n                <SidebarClose onClick={() => setSidebar(false)}>\r\n                    <i className=\"bi bi-x-lg\"></i>\r\n                </SidebarClose>\r\n                <NavbarItem to=\"/app\">App</NavbarItem>\r\n                <NavbarItem to=\"\">Buy SVC</NavbarItem>\r\n                <NavbarItem to=\"\">Discord</NavbarItem>\r\n                <NavbarItem to=\"\">Twitter</NavbarItem>\r\n                <NavbarItem to=\"\">Medium</NavbarItem>\r\n                <NavbarItem to=\"\">Docs</NavbarItem>\r\n                <NavbarItem to=\"\">Contracts</NavbarItem>\r\n            </Sidebar>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default LandingHeader;\r\n","import styled from \"styled-components\";\r\n\r\nexport const LandingViewWrapper = styled.div``;\r\n\r\nexport const LandingIntroWrapper = styled.div`\r\n    display: flex;\r\n    align-items: center;\r\n`;\r\n\r\nexport const LandingContainer = styled.div`\r\n    padding-top: 112px;\r\n`;\r\n\r\nexport const IntroContainer = styled.div`\r\n    max-width: 500px;\r\n    width: 100%;\r\n    h1,\r\n    h3,\r\n    p {\r\n        margin: 0;\r\n        padding: 0;\r\n    }\r\n    h1 {\r\n        color: #03032d;\r\n        margin-bottom: 1rem;\r\n        font-weight: 600;\r\n        line-height: 1.3;\r\n        font-size: 2.5rem;\r\n    }\r\n    h3 {\r\n        color: #8247e5;\r\n        font-size: 1rem;\r\n        font-weight: 700;\r\n        line-height: 1.3;\r\n    }\r\n    p {\r\n        margin-bottom: 1.5rem;\r\n        font-size: 1.15rem;\r\n        line-height: 1.7;\r\n        color: #6c7a87;\r\n        font-weight: 400;\r\n    }\r\n`;\r\n\r\nexport const IntroImageContainer = styled.div`\r\n    align-items: center;\r\n    max-width: 600px;\r\n    width: 100%;\r\n    div {\r\n        max-width: 350px;\r\n        width: 100%;\r\n        margin: auto;\r\n    }\r\n    img {\r\n        width: 100%;\r\n    }\r\n`;\r\n\r\nexport const CardGroupWrapper = styled.div`\r\n    display: grid;\r\n    grid-template-columns: repeat(3, 1fr);\r\n    grid-gap: 16px;\r\n    padding: 100px 0;\r\n    border-bottom: 1px solid #e2e8f0;\r\n    @media screen and (max-width: 1024px) {\r\n        grid-template-columns: 1fr;\r\n    }\r\n`;\r\n\r\nexport const CardWrapper = styled.div`\r\n    width: 100%;\r\n    z-index: 3;\r\n    position: relative;\r\n    padding: 28px;\r\n    border: 1px solid #eaecf3;\r\n    border-radius: 0.5rem;\r\n    transition: all 0.25s;\r\n    box-shadow: none;\r\n    :hover {\r\n        box-shadow: 0 0 1.24rem rgb(31 45 61 / 10%);\r\n    }\r\n    h1,\r\n    p {\r\n        padding-left: 24px;\r\n        margin: 0;\r\n    }\r\n    h1 {\r\n        font-size: 1.25rem;\r\n        margin-bottom: 0.5rem;\r\n        font-weight: 600;\r\n        line-height: 1.3;\r\n        color: #03032d;\r\n    }\r\n    p {\r\n        font-size: 1rem;\r\n        font-weight: 400;\r\n        line-height: 1.7;\r\n        color: #6c7a87;\r\n    }\r\n`;\r\n\r\nexport const LandingAboutWrapper = styled.div`\r\n    max-width: 600px;\r\n    width: 100%;\r\n    margin: auto;\r\n    padding: 100px 0;\r\n`;\r\n\r\nexport const AboutTitle = styled.div`\r\n    text-align: center;\r\n    margin-bottom: 3rem;\r\n    h1 {\r\n        line-height: 1.2;\r\n        margin: 0;\r\n        margin-bottom: 1rem;\r\n        font-weight: 600;\r\n        color: #03032d;\r\n    }\r\n    p {\r\n        margin: 0;\r\n        font-size: 1.15rem;\r\n        font-weight: 400;\r\n        line-height: 1.7;\r\n        color: #6c7a87;\r\n    }\r\n`;\r\n\r\nexport const TabWrapper = styled.div`\r\n    display: flex;\r\n    justify-content: space-between;\r\n    width: 600px;\r\n    overflow: auto;\r\n`;\r\n\r\nexport const TabContainer = styled.div`\r\n    overflow: auto;\r\n`;\r\n\r\nexport const TabButton = styled.div<{ active: boolean }>`\r\n    width: 100%;\r\n    text-align: center;\r\n    background-color: ${({ active }) => (active ? \"rgb(24, 104, 183)\" : \"#fff\")};\r\n    border: 1px solid transparent;\r\n    border-color: ${({ active }) => (active ? \"rgb(24, 104, 183)\" : \"#eaecf3\")};\r\n    color: ${({ active }) => (active ? \"#fff\" : \"#03032d\")};\r\n    margin-right: 0.5rem;\r\n    margin-left: 0.5rem;\r\n    padding: 0.5rem 1.25rem;\r\n    font-size: 0.875rem;\r\n    border-radius: 0.2rem;\r\n    transition: color 0.15s ease-in-out, background-color 0.15s ease-in-out, border-color 0.15s ease-in-out, box-shadow 0.15s ease-in-out;\r\n    font-weight: 500;\r\n    cursor: pointer;\r\n    line-height: 1.7;\r\n`;\r\n\r\nexport const TabContent = styled.div<{ active: boolean }>`\r\n    opacity: ${({ active }) => (active ? 1 : 0)};\r\n    padding: 80px 12px 0 56px;\r\n    h3,\r\n    h5,\r\n    h4,\r\n    h1,\r\n    p {\r\n        margin: 0;\r\n    }\r\n\r\n    h3 {\r\n        margin-bottom: 16px;\r\n        color: rgb(24, 104, 183) !important;\r\n        font-size: 1rem;\r\n        font-weight: 700;\r\n        line-height: 1.3;\r\n    }\r\n\r\n    h1 {\r\n        margin-bottom: 8px;\r\n        font-weight: 700;\r\n        line-height: 1.3;\r\n        color: #03032d;\r\n        font-size: 1.75rem;\r\n    }\r\n    p {\r\n        margin-bottom: 32px;\r\n        font-size: 1.15rem;\r\n        font-weight: 400;\r\n        line-height: 1.7;\r\n        color: #6c7a87;\r\n    }\r\n`;\r\n\r\nexport const TabList = styled.div`\r\n    margin-bottom: 24px;\r\n    display: flex;\r\n`;\r\n\r\nexport const ListNum = styled.div`\r\n    width: 2rem;\r\n    height: 2rem;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    border-radius: 999px;\r\n    color: rgb(24, 104, 183);\r\n    background-color: rgba(24, 104, 183, 0.3);\r\n`;\r\n\r\nexport const ListContent = styled.div`\r\n    width: calc(100% - 1rem);\r\n    padding-left: 16px;\r\n    h4 {\r\n        margin-bottom: 0.25rem !important;\r\n        font-weight: 700;\r\n        line-height: 1.3;\r\n        color: #03032d;\r\n    }\r\n    h5 {\r\n        font-size: 1rem;\r\n        font-weight: 400;\r\n        line-height: 1.7;\r\n        color: #6c7a87;\r\n    }\r\n`;\r\n\r\nexport const LandingQuestionWrapper = styled.div`\r\n    background-color: rgb(24, 104, 183);\r\n    padding: 100px 0;\r\n`;\r\n\r\nexport const SectionTitle = styled.div`\r\n    margin-bottom: 48px;\r\n    h1,\r\n    p {\r\n        margin: 0;\r\n        text-align: center;\r\n    }\r\n    h1 {\r\n        color: #ffffff;\r\n        line-height: 1.2;\r\n        font-size: 2.5rem;\r\n        margin-bottom: 1rem !important;\r\n        font-weight: 700;\r\n    }\r\n    p {\r\n        font-size: 1.15rem;\r\n        font-weight: 400;\r\n        color: rgba(255, 255, 255, 0.65);\r\n    }\r\n`;\r\n\r\nexport const QestionCardGrid = styled.div`\r\n    display: grid;\r\n    grid-template-columns: repeat(2, 1fr);\r\n    grid-column-gap: 24px;\r\n    grid-row-gap: 32px;\r\n    @media screen and (max-width: 768px) {\r\n        grid-template-columns: 1fr;\r\n    }\r\n`;\r\n\r\nexport const QuestionCardWrapper = styled.div`\r\n    background-color: #fff;\r\n    border-radius: 0.5rem;\r\n\r\n    padding: 28px;\r\n    display: flex;\r\n`;\r\n\r\nexport const IconWrapper = styled.div`\r\n    width: 4rem;\r\n    height: 4rem;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    font-size: 28px;\r\n    background-color: rgb(24, 104, 183);\r\n    color: #ffffff;\r\n    border-radius: 999px;\r\n`;\r\n\r\nexport const QuestionCardContent = styled.div`\r\n    width: calc(100% - 66px - 64px);\r\n    h3,\r\n    p {\r\n        margin: 0;\r\n    }\r\n    h3 {\r\n        margin-bottom: 0.5rem;\r\n        font-weight: 600;\r\n        line-height: 1.3;\r\n        font-size: 1.25rem;\r\n        color: #03032d;\r\n    }\r\n    p {\r\n        width: 90%;\r\n        font-size: 1rem;\r\n        font-weight: 400;\r\n        line-height: 1.7;\r\n        color: #6c7a87;\r\n    }\r\n    margin-left: 10px;\r\n`;\r\n","import React, { useState } from \"react\";\r\nimport Container from \"src/components/Container\";\r\nimport { AboutTitle, LandingAboutWrapper, ListContent, ListNum, TabButton, TabContent, TabWrapper, TabList, TabContainer } from \"./landing.styles\";\r\n\r\nconst LandingAbout: React.FC = () => {\r\n    const [tab, setTab] = useState(\"types\");\r\n    const handleTabClick = (key: string) => {\r\n        setTab(key);\r\n    };\r\n    return (\r\n        <Container>\r\n            <LandingAboutWrapper>\r\n                <AboutTitle>\r\n                    <h1>What we're about.</h1>\r\n                    <p>A stable return on investment that will last indefinitely.</p>\r\n                </AboutTitle>\r\n                <TabButtonGroup onClick={handleTabClick} />\r\n                {tab === \"types\" && <AboutTypes active={tab === \"types\"} />}\r\n                {tab === \"protocol\" && <AboutProtocol active={tab === \"protocol\"} />}\r\n                {tab === \"auto\" && <AboutAuto active={tab === \"auto\"} />}\r\n            </LandingAboutWrapper>\r\n        </Container>\r\n    );\r\n};\r\n\r\nconst TabButtonGroup: React.FC<{ onClick: Function }> = ({ onClick }) => {\r\n    const [selected, setSelected] = useState(\"types\");\r\n    const tabBtns = [\r\n        {\r\n            key: \"types\",\r\n            title: \"Types of Nodes\",\r\n        },\r\n        {\r\n            key: \"protocol\",\r\n            title: \"Protocol owned LPs\",\r\n        },\r\n        {\r\n            key: \"auto\",\r\n            title: \"Auto-adjusting supply\",\r\n        },\r\n    ];\r\n\r\n    const handleClick = (key: string) => {\r\n        setSelected(key);\r\n        onClick(key);\r\n    };\r\n\r\n    return (\r\n        <TabContainer>\r\n            <TabWrapper>\r\n                {tabBtns.map((item: { title: string; key: string }, key: number) => (\r\n                    <TabButton active={item.key === selected} key={key} onClick={() => handleClick(item.key)}>\r\n                        {item.title}\r\n                    </TabButton>\r\n                ))}\r\n            </TabWrapper>\r\n        </TabContainer>\r\n    );\r\n};\r\n\r\nconst AboutTypes: React.FC<{ active: boolean }> = ({ active }) => {\r\n    const data = [\r\n        {\r\n            title: \"Planck SVC\",\r\n            desc: \"25 SVC x 25 DAI - returns 0.1 SVC/day\",\r\n        },\r\n        {\r\n            title: \"Femto SVC\",\r\n            desc: \"50 SVC x 50 DAI - returns 0.3 SVC/day\",\r\n        },\r\n        {\r\n            title: \"Pico SVC\",\r\n            desc: \"75 SVC x 75 DAI - returns 0.6 SVC/day\",\r\n        },\r\n        {\r\n            title: \"Nano SVC\",\r\n            desc: \"100 SVC x 100 DAI - returns 1 SVC/day\",\r\n        },\r\n        {\r\n            title: \"Mini SVC\",\r\n            desc: \"250 SVC x 250 DAI - returns 3 SVC/day\",\r\n        },\r\n        {\r\n            title: \"Kilo SVC\",\r\n            desc: \"1000 SVC x 1000 DAI - returns 16 SVC/day\",\r\n        },\r\n        {\r\n            title: \"Giga SVC\",\r\n            desc: \"5000 SVC x 5000 DAI - returns 100 SVC/day\",\r\n        },\r\n    ];\r\n    return (\r\n        <TabContent active={active}>\r\n            <h3>8 different types of nodes</h3>\r\n            <h1>Choose yours...</h1>\r\n            <p>The bigger the node, the better the daily return</p>\r\n            {data.map((item: { title: string; desc: string }, key: number) => (\r\n                <TabList key={key}>\r\n                    <ListNum>{key + 1}</ListNum>\r\n                    <ListContent>\r\n                        <h4>{item.title}</h4>\r\n                        <h5>{item.desc}</h5>\r\n                    </ListContent>\r\n                </TabList>\r\n            ))}\r\n        </TabContent>\r\n    );\r\n};\r\n\r\nconst AboutProtocol: React.FC<{ active: boolean }> = ({ active }) => {\r\n    return (\r\n        <TabContent active={active}>\r\n            <h3>LP tokens pool</h3>\r\n            <h1>Protocol owned liquidity</h1>\r\n            <p>\r\n                {\r\n                    \"When a node is minted we create a SVC-DAI liquidity pair in SushiSwap and store the LP tokens in the contract's pool. This means that SVC will always have enough liquidity to be traded. The more nodes are minted, the more liquid SVC has.\"\r\n                }\r\n            </p>\r\n        </TabContent>\r\n    );\r\n};\r\n\r\nconst AboutAuto: React.FC<{ active: boolean }> = ({ active }) => {\r\n    return (\r\n        <TabContent active={active}>\r\n            <h1>Auto-adjusting supply</h1>\r\n            <p>\r\n                {\r\n                    \"SVC DAO's contract adjusts it's own supply daily to keep a constant APR runway of 365 days. This means that for every node that exists we'll always have enough rewards to pay one year ahead. This value is adjusted daily, so it means there will always exist enough SVC to pay node holders.\"\r\n                }\r\n            </p>\r\n            <p>\r\n                {\r\n                    \"This system also makes the token inflationary if there's new nodes being created, but deflationary if there's an excess of SVC in the pool. The total supply isn't a fixed number as in other tokens.\"\r\n                }\r\n            </p>\r\n        </TabContent>\r\n    );\r\n};\r\n\r\nexport default LandingAbout;\r\n","import React from \"react\";\r\nimport Container from \"src/components/Container\";\r\nimport { CardGroupWrapper, CardWrapper } from \"./landing.styles\";\r\n\r\ninterface CardProps {\r\n    title: string;\r\n    desc: string;\r\n}\r\n\r\nconst cardData = [\r\n    {\r\n        title: \"Stable passive income\",\r\n        desc: \"Our nodes offer from 0.1% to 1% daily ROI depending on initial investment\",\r\n    },\r\n    {\r\n        title: \"Nodes for everyone\",\r\n        desc: \"We offer 8 different node sizes so you invest as much as you want\",\r\n    },\r\n    {\r\n        title: \"Simple to use\",\r\n        desc: \"Our app is simple to use and you can get started in 3 easy steps\",\r\n    },\r\n];\r\n\r\nconst LandingCardGroup: React.FC = () => {\r\n    return (\r\n        <Container>\r\n            <CardGroupWrapper>\r\n                {cardData.map((item: CardProps, key: number) => (\r\n                    <Card key={key} title={item.title} desc={item.desc} />\r\n                ))}\r\n            </CardGroupWrapper>\r\n        </Container>\r\n    );\r\n};\r\n\r\nconst Card: React.FC<CardProps> = ({ title, desc }) => {\r\n    return (\r\n        <CardWrapper>\r\n            <h1>{title}</h1>\r\n            <p>{desc}</p>\r\n        </CardWrapper>\r\n    );\r\n};\r\n\r\nexport default LandingCardGroup;\r\n","import React from \"react\";\r\nimport Container from \"src/components/Container\";\r\nimport { IntroContainer, LandingIntroWrapper, IntroImageContainer } from \"./landing.styles\";\r\nimport logoImg from \"../../assets/image/logo.png\";\r\n\r\nconst LandingIntro: React.FC = () => {\r\n    //comment\r\n    \r\n    return (\r\n        <Container>\r\n            <LandingIntroWrapper>\r\n                <IntroContainer>\r\n                    <h3>SVC Protocol</h3>\r\n                    <h1>\r\n                        Node up.\r\n                        <br />\r\n                        Contribute to liquidity.\r\n                    </h1>\r\n                    <p>A node protocol that owns its liquidity and automatically adjusts its supply in order to maintain a stable yield.</p>\r\n                </IntroContainer>\r\n                <IntroImageContainer>\r\n                    <div>\r\n                        <img src={logoImg} alt=\"logoImg\" />\r\n                    </div>\r\n                </IntroImageContainer>\r\n            </LandingIntroWrapper>\r\n        </Container>\r\n    );\r\n};\r\n\r\nexport default LandingIntro;\r\n","import React from \"react\";\r\nimport Container from \"src/components/Container\";\r\nimport { LandingQuestionWrapper, QestionCardGrid, IconWrapper, QuestionCardWrapper, SectionTitle, QuestionCardContent } from \"./landing.styles\";\r\n\r\ninterface CardProps {\r\n    icon: string;\r\n    title: string;\r\n    desc: string;\r\n}\r\n\r\nconst LandingQuestion: React.FC = () => {\r\n    const data = [\r\n        {\r\n            icon: \"patch-question\",\r\n            title: \"What's SVC?\",\r\n            desc: \"SVC is a node protocol that owns its liquidity and that automatically adjusts its supply in order to maintain a stable yield forever.\",\r\n        },\r\n        {\r\n            icon: \"box\",\r\n            title: \"Why does SVC exist?\",\r\n            desc: \"We're very passionate about passive income, we set out to create a passive income machine that would just work by itself.\",\r\n        },\r\n        {\r\n            icon: \"people\",\r\n            title: \"How can I participate?\",\r\n            desc: \"We're in the Polygon network. 1. Buy SVC, 2. Buy DAI, 3. Setup a node by providing SVC and DAI at the same amount.\",\r\n        },\r\n        {\r\n            icon: \"people\",\r\n            title: \"What's in it for me?\",\r\n            desc: \"A stable return. SVC pays a daily return per node, depending on the type. That's effectively between 0.1 and 1% per day.\",\r\n        },\r\n    ];\r\n    return (\r\n        <LandingQuestionWrapper>\r\n            <Container>\r\n                <SectionTitle>\r\n                    <h1>Any questions?</h1>\r\n                    <p>{\"We have way more content in our docs, but here's a TL;DR\"}</p>\r\n                </SectionTitle>\r\n                <QestionCardGrid>\r\n                    {data.map((item: CardProps, key: number) => (\r\n                        <QuestionCard key={key} {...item} />\r\n                    ))}\r\n                </QestionCardGrid>\r\n            </Container>\r\n        </LandingQuestionWrapper>\r\n    );\r\n};\r\n\r\nconst QuestionCard: React.FC<CardProps> = ({ icon, title, desc }) => {\r\n    return (\r\n        <QuestionCardWrapper>\r\n            <IconWrapper>\r\n                <i className={`bi bi-${icon}`}></i>\r\n            </IconWrapper>\r\n            <QuestionCardContent>\r\n                <h3>{title}</h3>\r\n                <p>{desc}</p>\r\n            </QuestionCardContent>\r\n        </QuestionCardWrapper>\r\n    );\r\n};\r\n\r\nexport default LandingQuestion;\r\n","import React from \"react\";\r\nimport LandingFooter from \"src/components/LandingLayout/LandingFooter\";\r\nimport LandingHeader from \"src/components/LandingLayout/LandingHeader\";\r\nimport { LandingContainer, LandingViewWrapper } from \"./landing.styles\";\r\nimport LandingAbout from \"./LandingAbout\";\r\nimport LandingCardGroup from \"./LandingCardGroup\";\r\nimport LandingIntro from \"./LandingIntro\";\r\nimport LandingQuestion from \"./LandingQuestion\";\r\n\r\nconst LandingView: React.FC = () => {\r\n    return (\r\n        <LandingViewWrapper>\r\n            <LandingHeader />\r\n            <LandingContainer>\r\n                <LandingIntro />\r\n                <LandingCardGroup />\r\n                <LandingAbout />\r\n                <LandingQuestion />\r\n            </LandingContainer>\r\n            <LandingFooter />\r\n        </LandingViewWrapper>\r\n    );\r\n};\r\n\r\nexport default LandingView;\r\n","export default __webpack_public_path__ + \"static/media/metamask.7db94670.svg\";","import { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useWeb3Context } from \"../../../hooks\";\nimport { DEFAULD_NETWORK } from \"../../../constants\";\nimport { IReduxState } from \"../../../store/slices/state.interface\";\nimport { IPendingTxn } from \"../../../store/slices/pending-txns-slice\";\nimport \"./connect-menu.scss\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\n\n\nfunction ConnectMenu() {\n    const { connect, disconnect, connected, web3, providerChainID, checkWrongNetwork } = useWeb3Context();\n    const [isConnected, setConnected] = useState(connected);\n\n    let pendingTransactions = useSelector<IReduxState, IPendingTxn[]>(state => {\n        return state.pendingTransactions;\n    });\n\n    let buttonText = \"Connect Wallet\";\n    let clickFunc: any = connect;\n    let buttonStyle = {};\n\n    if (connected) {\n        buttonText = \"Disconnect\";\n        clickFunc = disconnect;\n    }\n\n    if (pendingTransactions && pendingTransactions.length > 0) {\n        buttonText = `${pendingTransactions.length} Pending `;\n        clickFunc = () => {};\n    }\n\n    if (isConnected && providerChainID !== DEFAULD_NETWORK) {\n        buttonText = \"Wrong network\";\n        clickFunc = () => {\n            checkWrongNetwork();\n        };\n    }\n\n    useEffect(() => {\n        setConnected(connected);\n    }, [web3, connected]);\n\n    return (\n        <div className=\"connect-button\" style={buttonStyle} onClick={clickFunc}>\n            <p>{buttonText}</p>\n            {pendingTransactions.length > 0 && (\n                <div className=\"connect-button-progress\">\n                    <CircularProgress size={15} color=\"inherit\" />\n                </div>\n            )}\n        </div>\n    );\n}\n\nexport default ConnectMenu;\n","import React, { useState } from \"react\";\r\nimport { AppHeaderWrapper, AppNavbarWrapper, AppSidebarWrapper, HeaderTitle, NavbarLink, NavbarLinkGroup, SidebarBtn, SidebarClose } from \"./applayout.styles\";\r\n\r\nimport Sidebar from \"./Sidebar\";\r\n\r\nimport metamaskImg from \"../../assets/image/metamask.svg\";\r\nimport WalletConnectBtn from \"../Header/connect-button\";\r\n\r\nconst AppHeader: React.FC = () => {\r\n    const [sidebar, setSidebar] = useState(false);\r\n    return (\r\n        <>\r\n            <AppHeaderWrapper>\r\n                <SidebarBtn onClick={() => setSidebar(true)}>\r\n                    <i className=\"bi bi-text-indent-right\"></i>\r\n                </SidebarBtn>\r\n                <AppNavbarWrapper>\r\n                    <HeaderTitle>SVC Protocol</HeaderTitle>\r\n                    <NavbarLinkGroup>\r\n                        <NavbarLink active={true}>App</NavbarLink>\r\n                        <NavbarLink>| Buy SVC</NavbarLink>\r\n                        <NavbarLink>| Docs</NavbarLink>\r\n                        <NavbarLink>Discord</NavbarLink>\r\n                        <NavbarLink>Twitter</NavbarLink>\r\n                        <NavbarLink>Medium</NavbarLink>\r\n                        <NavbarLink>\r\n                            | +<img src={metamaskImg} alt=\"metamaskImg\" />\r\n                        </NavbarLink>\r\n                    </NavbarLinkGroup>\r\n                </AppNavbarWrapper>\r\n                <WalletConnectBtn />\r\n            </AppHeaderWrapper>\r\n            <Sidebar active={sidebar} onClick={() => setSidebar(false)}>\r\n                <SidebarClose onClick={() => setSidebar(false)}>\r\n                    <i className=\"bi bi-x-lg\"></i>\r\n                </SidebarClose>\r\n                <HeaderTitle>SVC Protocol</HeaderTitle>\r\n                <NavbarLink active={true}>App</NavbarLink>\r\n                <NavbarLink>Buy SVC</NavbarLink>\r\n                <NavbarLink>Docs</NavbarLink>\r\n                <NavbarLink>Discord</NavbarLink>\r\n                <NavbarLink>Twitter</NavbarLink>\r\n                <NavbarLink>Old contract rewards</NavbarLink>\r\n                <NavbarLink>Medium</NavbarLink>\r\n                <NavbarLink>\r\n                    +<img src={metamaskImg} alt=\"metamaskImg\" />\r\n                </NavbarLink>\r\n            </Sidebar>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default AppHeader;\r\n","import styled from \"styled-components\";\r\n\r\nexport const AppViewWrapper = styled.div``;\r\n\r\nexport const AppCardGroup = styled.div<{ repeat: number; padding?: boolean }>`\r\n    display: grid;\r\n    grid-template-columns: repeat(${({ repeat }) => repeat}, 1fr);\r\n    grid-column-gap: 24px;\r\n    grid-row-gap: 48px;\r\n    padding: ${({ padding }) => (padding ? \"48px 0\" : \"100px 0\")};\r\n    @media screen and (max-width: 1024px) {\r\n        grid-template-columns: 1fr;\r\n    }\r\n`;\r\n\r\nexport const AppCardWrapper = styled.div`\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n    background-color: #eee7fa;\r\n    padding: 1rem 1rem;\r\n    border: 1px solid rgba(0, 0, 0, 0.125);\r\n    border-radius: 0.25rem;\r\n    h3,\r\n    h4,\r\n    h5 {\r\n        margin: 0;\r\n        color: #000;\r\n        text-align: center;\r\n    }\r\n    h3 {\r\n        font-weight: 500;\r\n        font-size: 1.25rem;\r\n        line-height: 1.2;\r\n        margin-bottom: 0.5rem;\r\n    }\r\n    h4 {\r\n        margin-bottom: 1rem;\r\n        font-size: 1rem;\r\n        font-weight: 400;\r\n        line-height: 1.5;\r\n    }\r\n    h5 {\r\n        font-size: 0.9rem;\r\n        font-weight: 400;\r\n        line-height: 1.5;\r\n    }\r\n    img {\r\n        width: 40px;\r\n    }\r\n`;\r\n\r\nexport const Divider = styled.div`\r\n    width: 100%;\r\n    height: 2px;\r\n    background-color: #ddd;\r\n`;\r\n\r\nexport const ModalHeader = styled.div`\r\n    font-size: 20px;\r\n    padding: 20px 30px;\r\n    border-bottom: 1px solid #ddd;\r\n`;\r\n\r\nexport const ModalContainer = styled.div`\r\n    padding: 20px 30px;\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n    .select-label {\r\n        padding: 0 0 20px;\r\n    }\r\n`;\r\n\r\nexport const ModalFooter = styled.div`\r\n    padding: 20px 30px;\r\n    border-top: 1px solid #ddd;\r\n    display: flex;\r\n    justify-content: flex-end;\r\n`;\r\n\r\nexport const MintFormWrapper = styled.div`\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n    margin-bottom: 20px;\r\n    width: 100%;\r\n`;\r\n``;\r\n\r\nexport const FormLabel = styled.div``;\r\n\r\nexport const MintForm = styled.div`\r\n    padding-top: 10px;\r\n    justify-content: center;\r\n    display: flex;\r\n    align-items: center;\r\n    width: 100%;\r\n    i {\r\n        font-size: 40px;\r\n        font-weight: 900;\r\n        color: rgb(24, 104, 183);\r\n    }\r\n`;\r\n","import React from \"react\";\r\nimport { AppFooterWrapper } from \"./applayout.styles\";\r\n\r\nconst AppFooter: React.FC = () => {\r\n    return (\r\n        <AppFooterWrapper>\r\n            <a href=\"#\">Twitter</a>|<a href=\"#\">Discord</a>|<a href=\"#\">Docs</a>|<a href=\"#\">Contracts</a>\r\n        </AppFooterWrapper>\r\n    );\r\n};\r\n\r\nexport default AppFooter;\r\n","export default __webpack_public_path__ + \"static/media/skeleton.dbbb2884.gif\";","import { createSlice, PayloadAction } from \"@reduxjs/toolkit\";\n\nexport interface IPendingTxn {\n    readonly txnHash: string;\n    readonly text: string;\n    readonly type: string;\n}\n\nconst initialState: Array<IPendingTxn> = [];\n\nconst pendingTxnsSlice = createSlice({\n    name: \"pendingTransactions\",\n    initialState,\n    reducers: {\n        fetchPendingTxns(state, action: PayloadAction<IPendingTxn>) {\n            state.push(action.payload);\n        },\n        clearPendingTxn(state, action: PayloadAction<string>) {\n            const target = state.find(x => x.txnHash === action.payload);\n            if (target) {\n                state.splice(state.indexOf(target), 1);\n            }\n        },\n    },\n});\n\nexport const getStakingTypeText = (action: string) => {\n    return action.toLowerCase() === \"stake\" ? \"Staking TIME\" : \"Unstaking MEMO\";\n};\n\nexport const getWrappingTypeText = (isWrap: boolean) => {\n    return isWrap ? \"Wrap MEMO\" : \"Unwrap wMEMO\";\n};\n\nexport const isPendingTxn = (pendingTransactions: IPendingTxn[], type: string) => {\n    return pendingTransactions.map(x => x.type).includes(type);\n};\n\nexport const txnButtonText = (pendingTransactions: IPendingTxn[], type: string, defaultText: string) => {\n    return isPendingTxn(pendingTransactions, type) ? \"Pending...\" : defaultText;\n};\n\nexport const { fetchPendingTxns, clearPendingTxn } = pendingTxnsSlice.actions;\n\nexport default pendingTxnsSlice.reducer;\n","import { Color } from \"@material-ui/lab/Alert\";\nimport { createSlice, PayloadAction } from \"@reduxjs/toolkit\";\n\nexport type Message = IMessage & {\n    severity: Color;\n};\n\nexport interface MessagesState {\n    message: Message | null;\n}\n\ninterface IMessage {\n    text: string;\n    error?: any;\n}\n\n// Adds a message to the store\nconst createMessage = function (state: MessagesState, severity: Color, text: IMessage) {\n    const message: Message = {\n        severity,\n        ...text,\n    };\n    state.message = message;\n};\nconst initialState: MessagesState = {\n    message: null,\n};\nconst messagesSlice = createSlice({\n    name: \"messages\",\n    initialState,\n    reducers: {\n        // Creates an error message\n        error(state, action: PayloadAction<IMessage>) {\n            createMessage(state, \"error\", action.payload);\n        },\n        // Creates an information message\n        info(state, action: PayloadAction<IMessage>) {\n            createMessage(state, \"info\", action.payload);\n        },\n        warning(state, action: PayloadAction<IMessage>) {\n            createMessage(state, \"warning\", action.payload);\n        },\n        success(state, action: PayloadAction<IMessage>) {\n            createMessage(state, \"success\", action.payload);\n        },\n        // Closes a message\n        close(state) {\n            state.message = null;\n        },\n    },\n});\n\nexport const { error, info, close, warning, success } = messagesSlice.actions;\n\nexport default messagesSlice.reducer;\n","import { JsonRpcProvider } from \"@ethersproject/providers\";\nimport { utils } from \"ethers\";\n\nconst GAS = \"5\";\n\nexport const getGasPrice = async (provider: JsonRpcProvider) => {\n    const gasPrice = await provider.getGasPrice();\n    const convertGas = utils.parseUnits(GAS, \"gwei\");\n    return gasPrice.add(convertGas);\n};\n","import { Dispatch } from \"redux\";\nimport { error } from \"../store/slices/messages-slice\";\nimport { messages } from \"../constants/messages\";\n\nexport const metamaskErrorWrap = (err: any, dispatch: Dispatch) => {\n    let text = messages.something_wrong;\n\n    if (err.code && err.code === -32603) {\n        if (err.message.indexOf(\"ds-math-sub-underflow\") >= 0) {\n            text = \"You may be trying to bond more than your balance! Error code: 32603. Message: ds-math-sub-underflow\";\n        }\n\n        if (err.data && err.data.message) {\n            text = err.data.message.includes(\":\") ? err.data.message.split(\":\")[1].trim() : err.data.data || err.data.message;\n        }\n\n        if (err.data && err.data.message && err.data.message.includes(\"gas required exceeds allowance\")) {\n            text = \"Insufficient balance to make a transaction\";\n        }\n\n        if (err.data && err.data.message && err.data.message.includes(\"Bond too small\")) {\n            text = \"Bond too small\";\n        }\n    }\n\n    if (err.code && err.code === 4001) {\n        if (err.message.includes(\"User denied transaction signature\")) {\n            text = \"User denied transaction signature\";\n        }\n    }\n\n    return dispatch(error({ text, error: err }));\n};\n","import { ethers, constants, Signer } from \"ethers\";\nimport { getAddresses } from \"../../constants\";\nimport { fetchPendingTxns, clearPendingTxn } from \"./pending-txns-slice\";\nimport { createSlice, createSelector, createAsyncThunk } from \"@reduxjs/toolkit\";\nimport { JsonRpcProvider, StaticJsonRpcProvider } from \"@ethersproject/providers\";\nimport { fetchAccountSuccess, loadAccountDetails } from \"./account-slice\";\nimport { Networks } from \"../../constants/blockchain\";\nimport { RootState } from \"../store\";\nimport { error, warning, success, info } from \"./messages-slice\";\nimport { messages } from \"../../constants/messages\";\nimport { getGasPrice } from \"../../helpers/get-gas-price\";\nimport { metamaskErrorWrap } from \"../../helpers/metamask-error-wrap\";\nimport { sleep } from \"../../helpers\";\nimport { BigNumber } from \"ethers\";\nimport { DaiContract, SVCContract, DaoContract } from \"src/abi\";\nimport { loadAppDetails } from \"./app-slice\";\n\ninterface IChangeApproval {\n    token: \"dai\"| \"svc\";\n    amount: number;\n    provider: StaticJsonRpcProvider | JsonRpcProvider;\n    networkID: Networks;\n    address: string;\n}\n\nexport const changeApproval = createAsyncThunk(\"bonding/changeApproval\", async ({ token,amount, provider, networkID, address }: IChangeApproval, { dispatch }) => {\n    \n    if (!provider) {\n        dispatch(warning({ text: messages.please_connect_wallet }));\n        return;\n    }\n\n    const signer = provider.getSigner();\n    const addresses = getAddresses(networkID);\n    let tokenContract : any ;\n\n\n\n    if(token == \"dai\") {\n        tokenContract = new ethers.Contract(addresses.DAI_ADDRESS, DaiContract, signer);\n    } else if(token == \"svc\") {\n        tokenContract = new ethers.Contract(addresses.SVC_ADDRESS, SVCContract, signer);\n    }\n\n    let approveTx;\n    try {\n        const gasPrice = await getGasPrice(provider);\n        const amountToApprove = ethers.utils.parseUnits(String(amount),18); \n        approveTx = await tokenContract.approve( addresses.DAO_ADDRESS,amountToApprove, { gasPrice });\n        dispatch(\n            fetchPendingTxns({\n                txnHash: approveTx.hash,\n                text: \"Approving \" + token,\n                type: \"approve_\" + token,\n            }),\n        );\n        await approveTx.wait();\n        dispatch(success({ text: messages.tx_successfully_send }));\n        await sleep(10);\n        await dispatch(loadAccountDetails({ networkID, provider, address }));\n    } catch (err: any) {\n        metamaskErrorWrap(err, dispatch);\n    } finally {\n        if (approveTx) {\n            dispatch(clearPendingTxn(approveTx.hash));\n        }\n    }\n\n    await sleep(2);\n\n});\n\n\ninterface IMintNode {\n    type: number;\n    address: string;\n    networkID: Networks;\n    provider: StaticJsonRpcProvider | JsonRpcProvider;\n}\nexport const mintNode = createAsyncThunk(\"minting/mintNode\", async ({ type, address, networkID, provider }: IMintNode, { dispatch }) => {\n   \n    const signer = provider.getSigner();\n    const addresses = getAddresses(networkID);\n    let value : number = 0; \n    let displayName : string = \"\";\n    if ( type == 0 ) {\n        value = 25;\n        displayName = \"Planck SVC\";\n    } else if( type == 1){\n        value = 50;\n        displayName = \"Femto SVC\";\n    } else if( type == 2 ) {\n        value = 75;\n        displayName = \"Pico SVC\";\n    } else if( type == 3 ) {\n        value=100;\n        displayName = \"Nano SVC\";\n    } else if( type == 4 ) {\n        value = 250;\n        displayName = \"Mini SVC\";\n    } else if ( type == 5 ) {\n        value = 500;\n        displayName = \"Kilo SVC\";\n    } else if( type == 6 ) {\n        value = 1000;\n        displayName = \"Mega SVC\";\n    } else if( type == 7 ) {\n        value = 5000;\n        displayName = \"Giga SVC\";\n    }\n\n    const valueInWei = ethers.utils.parseUnits(String(value),18);\n\n    const daoContract = new ethers.Contract( addresses.DAO_ADDRESS, DaoContract, signer );\n\n    let mintTx;\n    try {\n        const gasPrice = await getGasPrice(provider);\n        \n        mintTx = await daoContract.mintNode( address , valueInWei , valueInWei, type, { gasPrice });\n        dispatch(\n            fetchPendingTxns({\n                txnHash: mintTx.hash,\n                text: \"Minting Node \" + displayName,\n                type: \"mint_\" + displayName,\n            }),\n        );\n        await mintTx.wait();\n        dispatch(success({ text: messages.tx_successfully_send }));\n        dispatch(info({ text: messages.your_balance_update_soon }));\n        await sleep(10);\n        await dispatch(loadAccountDetails({ networkID, provider, address }));\n        await dispatch(loadAppDetails({ networkID, provider }));\n        dispatch(info({ text: messages.your_balance_updated }));\n        return;\n    } catch (err: any) {\n        return metamaskErrorWrap(err, dispatch);\n    } finally {\n        if (mintTx) {\n            dispatch(clearPendingTxn(mintTx.hash));\n        }\n    }\n});\n\ninterface IClaimReward {\n    address: string;\n    networkID: Networks;\n    provider: StaticJsonRpcProvider | JsonRpcProvider;\n}\n\nexport const claimReward = createAsyncThunk(\"minting/claimReward\", async ({ address, networkID, provider }: IClaimReward, { dispatch }) => {\n    if (!provider) {\n        dispatch(warning({ text: messages.please_connect_wallet }));\n        return;\n    }\n\n    const signer = provider.getSigner();\n    const addresses = getAddresses(networkID);\n    const daoContract = new ethers.Contract( addresses.DAO_ADDRESS, DaoContract, signer );\n\n    let claimTx;\n    try {\n        const gasPrice = await getGasPrice(provider);\n        claimTx = await daoContract.withdrawInterest(address, { gasPrice });\n        const pendingTxnType = \"claim_reward\";\n        dispatch(\n            fetchPendingTxns({\n                txnHash: claimTx.hash,\n                text: \"Claim Reward\",\n                type: pendingTxnType,\n            }),\n        );\n        await claimTx.wait();\n        dispatch(success({ text: messages.tx_successfully_send }));\n        await sleep(0.01);\n        dispatch(info({ text: messages.your_balance_update_soon }));\n        await sleep(10);\n        await dispatch(loadAccountDetails({ networkID, provider, address }));\n        dispatch(info({ text: messages.your_balance_updated }));\n        return;\n    } catch (err: any) {\n        metamaskErrorWrap(err, dispatch);\n    } finally {\n        if (claimTx) {\n            dispatch(clearPendingTxn(claimTx.hash));\n        }\n    }\n});\n\n\n\n\n","import React, { useState } from \"react\";\r\nimport AppHeader from \"src/components/AppLayout/AppHeader\";\r\nimport { IAppSlice } from \"../../store/slices/app-slice\";\r\nimport { IReduxState } from \"../../store/slices/state.interface\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { AppCardGroup, AppViewWrapper, AppCardWrapper, Divider, ModalHeader, ModalContainer, ModalFooter, MintFormWrapper, MintForm, FormLabel } from \"./appview.styles\";\r\nimport Container from \"../../components/Container\";\r\nimport Button from \"../../components/Button/Button\";\r\nimport AppFooter from \"src/components/AppLayout/AppFooter\";\r\n\r\nimport skeletonSVG from \"../../assets/image/skeleton.gif\";\r\nimport { Box, FormControl, MenuItem, Modal, Select, Table, TableBody, TableCell, TableHead, TableRow, TextField } from \"@material-ui/core\";\r\nimport accountSlice, { IAccountSlice } from \"src/store/slices/account-slice\";\r\nimport { changeApproval, claimReward, mintNode } from \"src/store/slices/mint-slice\";\r\nimport { useWeb3Context } from \"../../hooks\";\r\nimport { prettyDate } from \"../../helpers\";\r\n\r\ninterface CardProps {\r\n    title?: string;\r\n    content?: any;\r\n    buttonText?: string;\r\n    desc?: string;\r\n    onClick?: any;\r\n    isModal?: boolean;\r\n    disabled?: boolean;\r\n}\r\n\r\nconst AppCard: React.FC<CardProps> = ({ onClick, title, disabled, content, buttonText = \"\", desc }) => {\r\n    return (\r\n        <AppCardWrapper>\r\n            <h3>{title}</h3>\r\n            <h4>{content}</h4>\r\n            {buttonText && <Button disabled={disabled} label={buttonText} onClick={onClick} />}\r\n            <h5>{desc}</h5>\r\n        </AppCardWrapper>\r\n    );\r\n};\r\n\r\nconst style = {\r\n    position: \"absolute\" as \"absolute\",\r\n    top: \"50%\",\r\n    left: \"50%\",\r\n    transform: \"translate(-50%, -50%)\",\r\n    width: \"60%\",\r\n    bgcolor: \"background.paper\",\r\n    borderRadius: 10,\r\n    boxShadow: \"0 0 20px #00000080\",\r\n};\r\n\r\nconst AppView: React.FC = () => {\r\n\r\n    const app = useSelector<IReduxState, IAppSlice>(state => state.app);\r\n    const account = useSelector<IReduxState, IAccountSlice>(state => state.account);\r\n    const dispatch = useDispatch();\r\n    const { provider, address, chainID, checkWrongNetwork } = useWeb3Context();\r\n    const isloading = app.loading || account.loading;\r\n    \r\n    const cardData1 = [\r\n        {\r\n            title: \"Documentation\",\r\n            content: \"All you need to know about SVC\",\r\n            buttonText: \"📚 Read the docs\",\r\n        },\r\n        {\r\n            title: \"SVC on QuickSwap\",\r\n            content: \"Buy at least 25 SVC for a node\",\r\n            buttonText: \"💰 Buy a SVC bag\",\r\n        },\r\n        {\r\n            title: \"DAI on QuickSwap\",\r\n            content: \"Buy at least 25 DAI for a node\",\r\n            buttonText: \"💰 Buy a DAI bag\",\r\n        },\r\n    ];\r\n    \r\n    const cardData2 = [\r\n        {\r\n            title: \"Total number of nodes\",\r\n            content: isloading? <img src={skeletonSVG} alt=\"skeleton\" /> : app.totalNodeNum,\r\n        },\r\n        {\r\n            title: \"Current node rewards\",\r\n            content: \"Up to 100 SVC per node per day\",\r\n        },\r\n        {\r\n            title: \"Protocol locked liquidity\",\r\n            content: \"Coming soon\",\r\n        },\r\n    ];\r\n    \r\n    const cardData3 = [\r\n        {\r\n            title: \"SVC in rewards pool\",\r\n            content: isloading ? <img src={skeletonSVG} alt=\"skeleton\" /> : app.svcDaoBalance,\r\n        },\r\n        {\r\n            title: \"DAI treasury value\",\r\n            content: \"Coming soon\",\r\n        },\r\n    ];\r\n    \r\n\r\n    const [open, setOpen] = useState(false);    \r\n    const [modal, setModal] = useState(\"\");\r\n    const flag = false;\r\n    const handleOpen = (key: string) => {\r\n        setModal(key);\r\n        setOpen(true);\r\n    };\r\n    const handleClose = () => setOpen(false);\r\n\r\n    const handleClaim = () => {\r\n        dispatch(claimReward({address, networkID: chainID, provider}));\r\n    }\r\n    return (\r\n        <AppViewWrapper>\r\n            <AppHeader />\r\n            <Container>\r\n                <AppCardGroup repeat={3}>\r\n                    <AppCard\r\n                        title={\"Number of nodes\"}\r\n                        content={isloading ?  <img src={skeletonSVG} alt=\"skeleton\"/> : account.balances.numNodes}\r\n                        buttonText=\"🧊 Your SVC nodes\"\r\n                        disabled={isloading}\r\n                        onClick={() => handleOpen(\"node\")}\r\n                    />\r\n                    <AppCard\r\n                        title={\"Rewards accumulated\"}\r\n                        content={isloading ? <img src={skeletonSVG} alt=\"skeleton\" /> : account.balances.claimableReward }\r\n                        buttonText={ \"🤑 Claim\" }\r\n                        onClick={()=> handleClaim()}\r\n                        disabled={!(account.balances.withdrawAvailable && account.balances.claimableReward > 0 )}\r\n                    />\r\n                    {cardData1.map((item: CardProps, key: number) => {\r\n                        return item.title ? <AppCard {...item} key={key} /> : <div />;\r\n                    })}\r\n                    <AppCard \r\n                        title={\"Mint a liquidity node\"} \r\n                        disabled={ account.loading } \r\n                        content={\"Provide tokens: SVC - DAI\"} \r\n                        buttonText={\"💦  Mint a liquidity node\"} \r\n                        onClick={() => handleOpen(\"mint\")} \r\n                    />\r\n                    <div />\r\n                    <AppCard title={\"Get a FREE Nano node!\"} content={\"We give away one node per week to accounts that tweet about us!\"} buttonText=\"🐦 Tweet about SVC\" />\r\n                </AppCardGroup>\r\n                <Divider />\r\n                <AppCardGroup repeat={3} style={{ paddingBottom: \"48px\" }}>\r\n                    {cardData2.map((item: CardProps, key: number) => {\r\n                        return item.title ? <AppCard {...item} key={key} /> : <div />;\r\n                    })}\r\n                </AppCardGroup>\r\n                <AppCardGroup repeat={2} style={{ paddingTop: 0 }}>\r\n                    {cardData3.map((item: CardProps, key: number) => {\r\n                        return item.title ? <AppCard {...item} key={key} /> : <div />;\r\n                    })}\r\n                </AppCardGroup>\r\n            </Container>\r\n            <AppFooter />\r\n            <Modal open={open} onClose={handleClose} aria-labelledby=\"modal-modal-title\" aria-describedby=\"modal-modal-description\">\r\n                <Box sx={style}>{modal === \"node\" ? <NodeModal onCancel={handleClose} /> : <MintModal />}</Box>\r\n            </Modal>\r\n        </AppViewWrapper>\r\n    );\r\n};\r\n\r\nconst NodeModal: React.FC<any> = ({ onCancel }) => {\r\n\r\n    const TableData = [\r\n        { nodeType : \"Planck SVC\", rewardAmount : \"0.1 SVC\"},\r\n        { nodeType : \"Femto SVC\", rewardAmount : \"0.3 SVC\"},\r\n        { nodeType : \"Pico SVC\", rewardAmount : \"0.6 SVC\"},\r\n        { nodeType : \"Nano SVC\", rewardAmount : \"1 SVC\"},\r\n        { nodeType : \"Mini SVC\", rewardAmount : \"3 SVC\"},\r\n        { nodeType : \"Kilo SVC\", rewardAmount : \"7 SVC\"},\r\n        { nodeType : \"Mega SVC\", rewardAmount : \"16 SVC\"},\r\n        { nodeType : \"Giga SVC\", rewardAmount : \"100 SVC\"}\r\n    ]\r\n\r\n\r\n    const account = useSelector<IReduxState, IAccountSlice>(state => state.account);\r\n\r\n    function createData(node: string, nodeType: string, created: string, rewards: string) {\r\n        return { node, nodeType, created, rewards };\r\n    }\r\n\r\n    let rows : Array<any> = [];\r\n\r\n    const nodes = account.balances.nodes;\r\n\r\n    for(let i=0; i<nodes?.length; i++){\r\n       rows.push(createData(String(i+1), TableData[nodes[i][0].toNumber()].nodeType, prettyDate(nodes[i][1].toNumber()),TableData[nodes[i][0].toNumber()].rewardAmount));\r\n       console.log(nodes[i][1].toNumber())\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <ModalHeader>Your SVC Nodes</ModalHeader>\r\n            <ModalContainer>\r\n                <Table>\r\n                    <TableHead>\r\n                        <TableRow style={{ borderBottom: \"2px solid #666\" }}>\r\n                            <TableCell style={{ fontWeight: 700 }}>Node</TableCell>\r\n                            <TableCell align=\"right\" style={{ fontWeight: 900 }}>\r\n                                Node type\r\n                            </TableCell>\r\n                            <TableCell align=\"right\" style={{ fontWeight: 900 }}>\r\n                                Created At\r\n                            </TableCell>\r\n                            <TableCell align=\"right\" style={{ fontWeight: 900 }}>\r\n                                SVC rewards\r\n                            </TableCell>\r\n                        </TableRow>\r\n                    </TableHead>\r\n                    <TableBody>\r\n                        {rows?.map((row, key) => (\r\n                            <TableRow key={key}>\r\n                                <TableCell component=\"th\" scope=\"row\">\r\n                                    {row.node}\r\n                                </TableCell>\r\n                                <TableCell align=\"right\" style={{ fontWeight: 700 }}>{row.nodeType}</TableCell>\r\n                                <TableCell align=\"right\" style={{ fontWeight: 700 }}>{row.created}</TableCell>\r\n                                <TableCell align=\"right\" style={{ fontWeight: 700 }}>{row.rewards}</TableCell>\r\n                            </TableRow>\r\n                        ))}\r\n                    </TableBody>\r\n                </Table>\r\n            </ModalContainer>\r\n            <ModalFooter>\r\n                <Button label={\"Close\"} onClick={onCancel} />\r\n            </ModalFooter>\r\n        </div>\r\n    );\r\n};\r\n\r\nconst MintModal: React.FC<any> = ({ onCancel }) => {\r\n\r\n    const { provider, address, chainID, checkWrongNetwork } = useWeb3Context();\r\n    const dispatch = useDispatch();\r\n    const RowData = [\r\n        { tokenAmount: { svc: 25, dai: 25 }, label: \"Planck SVC | 25SVC x 25DAI | 0.1 SVC per day\" },\r\n        { tokenAmount: { svc: 50, dai: 50 }, label: \"Femto SVC | 50SVC x 50DAI | 0.3 SVC per day\" },\r\n        { tokenAmount: { svc: 75, dai: 75 }, label: \"Pico SVC | 75SVC x 75DAI | 0.6 SVC per day\" },\r\n        { tokenAmount: { svc: 100, dai: 100 }, label: \"Nano SVC | 100SVC x 100DAI | 1 SVC per day\" },\r\n        { tokenAmount: { svc: 250, dai: 250 }, label: \"Mini SVC | 250SVC x 250DAI | 3 SVC per day\" },\r\n        { tokenAmount: { svc: 500, dai: 500 }, label: \"Kilo SVC | 500SVC x 500DAI | 7 SVC per day\" },\r\n        { tokenAmount: { svc: 1000, dai: 1000 }, label: \"Mega SVC | 1000SVC x 1000DAI | 16 SVC per day\" },\r\n        { tokenAmount: { svc: 5000, dai: 5000 }, label: \"Giga SVC | 5000SVC x 5000DAI | 100 SVC per day\" },\r\n    ];\r\n\r\n    const account = useSelector<IReduxState, IAccountSlice>(state => state.account);\r\n    const [flag, setFlag] = useState(false);\r\n    const [selected, setSelect] = useState(-1);\r\n    const [tokenAmount, setTokenAmount] = useState<any>({});\r\n    const handleNext = () => {\r\n        console.log(selected)\r\n        if (selected > -1) {\r\n            setFlag(true);\r\n        }\r\n    };\r\n    const handleMint = async () => {\r\n        if (await checkWrongNetwork()) return;\r\n        dispatch(mintNode({type: selected, address, networkID: chainID, provider}));\r\n    };\r\n\r\n    const handleChange = (event: any) => {\r\n        console.log(event.target.value)\r\n        setSelect(event.target.value);\r\n        setTokenAmount(RowData[event.target.value].tokenAmount);\r\n    };\r\n\r\n    const handleProvideSVC = async () => {\r\n        if (await checkWrongNetwork()) return;\r\n        dispatch(changeApproval({ token : \"svc\",amount : tokenAmount.svc , provider, networkID : chainID, address}));\r\n    };\r\n\r\n    const handleProvideDAI = async () => {\r\n        if (await checkWrongNetwork()) return;\r\n        dispatch(changeApproval({ token : \"dai\" ,amount : tokenAmount.dai, provider, networkID : chainID, address}));\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <ModalHeader>Mint a SVC node</ModalHeader>\r\n            {flag ? (\r\n                <ModalContainer>\r\n                    <div className=\"select-label\">\r\n                        Provide exactly <b>{tokenAmount.svc} SVC</b> and <b>{tokenAmount.dai} DAI </b>for a liquidity node.\r\n                    </div>\r\n                    <MintFormWrapper>\r\n                        <FormLabel>{account.balances.svc} SVC Available</FormLabel>\r\n                        <MintForm>\r\n                            <Button  \r\n                                label={`Provide ${tokenAmount.svc} SVC`} \r\n                                disabled={ !(account.balances.svcAllowed < tokenAmount.svc && account.balances.svc > tokenAmount.svc)} \r\n                                onClick={handleProvideSVC} \r\n                            />\r\n                            {(account.balances.svcAllowed >= tokenAmount.svc && account.balances.svc >= tokenAmount.svc) && <i className=\"bi bi-check2\"></i>}\r\n                        </MintForm>\r\n                    </MintFormWrapper>\r\n                    <MintFormWrapper>\r\n                        <FormLabel>{account.balances.dai} DAI Available</FormLabel>\r\n                        <MintForm>\r\n                            <Button \r\n                                label={`Provide ${tokenAmount.dai} DAI`} \r\n                                onClick={handleProvideDAI} \r\n                                disabled={!(account.balances.daiAllowed < tokenAmount.dai && account.balances.dai > tokenAmount.dai)}\r\n                            />\r\n                            {(account.balances.daiAllowed >= tokenAmount.dai && account.balances.dai >= tokenAmount.dai) &&  <i className=\"bi bi-check2\"></i>}\r\n                        </MintForm>\r\n                    </MintFormWrapper>\r\n                </ModalContainer>\r\n            ) : (\r\n                <ModalContainer>\r\n                    <div className=\"select-label\">Select a SVC node type...</div>\r\n                    <FormControl size=\"small\" style={{ width: \"90%\" }}>\r\n                        <Select labelId=\"demo-select-small\" id=\"demo-select-small\" value={selected} label=\"Age\" style={{ width: \"100%\" }} onChange={handleChange}>\r\n                            <MenuItem value={-1}>\r\n                                <em>Select your SVC node</em>\r\n                            </MenuItem>\r\n                            {RowData.map((item: any, key: any) => (\r\n                                <MenuItem value={key} key={key}>\r\n                                    {item.label}\r\n                                </MenuItem>\r\n                            ))}\r\n                        </Select>\r\n                    </FormControl>\r\n                </ModalContainer>\r\n            )}\r\n            <ModalFooter>\r\n                <Button \r\n                    label={flag ? \"Mint Node\" : \"Next\"} \r\n                    onClick={flag ? handleMint : handleNext} \r\n                    disabled={ flag && \r\n                       !((account.balances.svcAllowed >= tokenAmount.svc && account.balances.svc >= tokenAmount.svc) &&\r\n                        (account.balances.daiAllowed >= tokenAmount.dai && account.balances.dai >= tokenAmount.dai))\r\n                    }\r\n                />\r\n            </ModalFooter>\r\n        </div>\r\n    );\r\n};\r\n\r\n\r\n\r\nexport default AppView;\r\n","import { useEffect, useState, useCallback } from \"react\";\nimport { Route, Switch } from \"react-router-dom\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useAddress, useWeb3Context } from \"../hooks\";\nimport { loadAppDetails } from \"../store/slices/app-slice\";\nimport { loadAccountDetails } from \"../store/slices/account-slice\";\nimport { IReduxState } from \"../store/slices/state.interface\";\nimport Loading from \"../components/Loader\";\nimport \"./style.scss\";\nimport LandingView from \"src/views/Landing/LandingView\";\nimport AppView from \"src/views/AppView/AppView\";\n\nfunction App() {\n    const dispatch = useDispatch();\n\n    const { connect, provider, hasCachedProvider, chainID, connected } = useWeb3Context();\n    const address = useAddress();\n\n    async function loadDetails(whichDetails: string) {\n        let loadProvider = provider;\n\n        if (whichDetails === \"app\") {\n            loadApp(loadProvider);\n        }\n\n        if (whichDetails === \"account\" && address && connected) {\n            loadAccount(loadProvider);\n            loadApp(loadProvider);\n        }\n\n    }\n\n    const loadApp = useCallback(\n        loadProvider => {\n            dispatch(loadAppDetails({ networkID: chainID, provider: loadProvider }));\n        },\n        [connected],\n    );\n\n    const loadAccount = useCallback(\n        loadProvider => {\n            dispatch(loadAccountDetails({ networkID: chainID, address, provider: loadProvider }));\n        },\n        [connected],\n    );\n\n    useEffect(() => {\n        if (connected) {\n            loadDetails(\"account\");\n            loadDetails(\"app\");\n        }\n    }, [connected]);\n\n    return (\n        <Switch>\n            <Route exact path={`/`}>\n                <LandingView />\n            </Route>\n            <Route exact path={`/app`}>\n                <AppView />\n            </Route>\n        </Switch>\n    );\n}\n\nexport default App;\n","import React, { useState } from \"react\";\nimport App from \"./App\";\nimport { HashRouter } from \"react-router-dom\";\n\n\nfunction Root() {\n\n    const app = () => (\n        <HashRouter>\n            <App />\n        </HashRouter>\n    );\n\n    return  app();\n}\n\nexport default Root;\n","import { configureStore } from \"@reduxjs/toolkit\";\n\nimport accountReducer from \"./slices/account-slice\";\nimport appReducer from \"./slices/app-slice\";\nimport pendingTransactionsReducer from \"./slices/pending-txns-slice\";\nimport messagesReducer from \"./slices/messages-slice\";\n\nconst store = configureStore({\n    reducer: {\n        account: accountReducer,\n        app: appReducer,\n        pendingTransactions: pendingTransactionsReducer,\n        messages: messagesReducer,\n    },\n    middleware: getDefaultMiddleware => getDefaultMiddleware({ serializableCheck: false }),\n});\n\nexport type RootState = ReturnType<typeof store.getState>;\nexport type AppDispatch = typeof store.dispatch;\n\nexport default store;\n","import React, { useState, forwardRef, useCallback } from \"react\";\nimport classnames from \"classnames\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { useSnackbar, SnackbarContent } from \"notistack\";\nimport Collapse from \"@material-ui/core/Collapse\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Card from \"@material-ui/core/Card\";\nimport CardActions from \"@material-ui/core/CardActions\";\nimport Button from \"@material-ui/core/Button\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport CloseIcon from \"@material-ui/icons/Close\";\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\nimport CheckCircleIcon from \"@material-ui/icons/CheckCircle\";\nimport { Message } from \"../../store/slices/messages-slice\";\nimport WarningIcon from \"@material-ui/icons/Warning\";\nimport ErrorIcon from \"@material-ui/icons/Error\";\nimport InfoIcon from \"@material-ui/icons/Info\";\nimport SuccessIcon from \"@material-ui/icons/CheckCircle\";\nimport { Color } from \"@material-ui/lab/Alert\";\nimport { CopyToClipboard } from \"react-copy-to-clipboard\";\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        [theme.breakpoints.up(\"sm\")]: {\n            minWidth: \"344px !important\",\n        },\n        maxWidth: 500,\n    },\n    card: {\n        width: \"100%\",\n    },\n    error: {\n        backgroundColor: \"#d32f2f\",\n    },\n    info: {\n        backgroundColor: \"#2979ff\",\n    },\n    warning: {\n        backgroundColor: \"#ffa000\",\n    },\n    success: {\n        backgroundColor: \"#43a047\",\n    },\n    typography: {\n        color: \"#FFFFFF\",\n        fontFamily: \"Montserrat SemiBold\",\n    },\n    actionRoot: {\n        padding: \"8px 8px 8px 16px\",\n        justifyContent: \"space-between\",\n        color: \"#FFFFFF\",\n    },\n    icons: {\n        marginLeft: \"auto\",\n    },\n    expand: {\n        padding: \"8px 8px\",\n        transform: \"rotate(0deg)\",\n        transition: theme.transitions.create(\"transform\", {\n            duration: theme.transitions.duration.shortest,\n        }),\n        color: \"#FFFFFF\",\n    },\n    expandOpen: {\n        transform: \"rotate(180deg)\",\n    },\n    collapse: {\n        padding: 16,\n    },\n    checkIcon: {\n        fontSize: 20,\n        color: \"#b3b3b3\",\n        paddingRight: 4,\n    },\n    checkIconCopy: {\n        color: \"#43a047\",\n    },\n    button: {\n        padding: 0,\n        textTransform: \"none\",\n    },\n    errorWrap: {\n        marginTop: 10,\n    },\n    errorText: {\n        whiteSpace: \"pre-wrap\",\n        maxHeight: 300,\n        overflow: \"auto\",\n        background: \"rgba(0,0,0,0.1)\",\n        padding: 5,\n        borderRadius: 5,\n    },\n}));\n\nconst SnackMessage = forwardRef<HTMLDivElement, { id: string | number; message: Message }>((props, ref) => {\n    const classes = useStyles();\n    const { closeSnackbar } = useSnackbar();\n    const [expanded, setExpanded] = useState(false);\n    const [isCopy, setIsCopy] = useState(false);\n\n    const handleExpandClick = useCallback(() => {\n        setExpanded(oldExpanded => !oldExpanded);\n    }, []);\n\n    const handleDismiss = useCallback(() => {\n        closeSnackbar(props.id);\n    }, [props.id, closeSnackbar]);\n\n    const getIcon = (severity: Color) => {\n        switch (severity) {\n            case \"error\":\n                return <ErrorIcon color=\"inherit\" />;\n            case \"info\":\n                return <InfoIcon color=\"inherit\" />;\n            case \"success\":\n                return <SuccessIcon color=\"inherit\" />;\n            case \"warning\":\n                return <WarningIcon color=\"inherit\" />;\n            default:\n                return <div />;\n        }\n    };\n\n    return (\n        <SnackbarContent ref={ref} className={classes.root}>\n            <Card className={classnames(classes.card, classes[props.message.severity])}>\n                <CardActions classes={{ root: classes.actionRoot }}>\n                    {getIcon(props.message.severity)}\n                    <Typography variant=\"subtitle2\" className={classes.typography}>\n                        {props.message.text}\n                    </Typography>\n                    <div className={classes.icons}>\n                        {props.message.error && (\n                            <IconButton aria-label=\"Show more\" className={classnames(classes.expand, { [classes.expandOpen]: expanded })} onClick={handleExpandClick}>\n                                <ExpandMoreIcon color=\"inherit\" />\n                            </IconButton>\n                        )}\n                        <IconButton className={classes.expand} onClick={handleDismiss}>\n                            <CloseIcon color=\"inherit\" />\n                        </IconButton>\n                    </div>\n                </CardActions>\n                <Collapse in={expanded} timeout=\"auto\" unmountOnExit>\n                    <Paper className={classes.collapse}>\n                        <CopyToClipboard text={JSON.stringify(props.message.error)} onCopy={() => setIsCopy(true)}>\n                            <Button size=\"small\" className={classes.button}>\n                                <CheckCircleIcon className={classnames(classes.checkIcon, { [classes.checkIconCopy]: isCopy })} />\n                                Copy to clipboard\n                            </Button>\n                        </CopyToClipboard>\n                        <div className={classes.errorWrap}>\n                            <Typography>Error message: </Typography>\n                            <Typography className={classes.errorText}>{JSON.stringify(props.message.error, null, 2)}</Typography>\n                        </div>\n                    </Paper>\n                </Collapse>\n            </Card>\n        </SnackbarContent>\n    );\n});\n\nexport default SnackMessage;\n","import ReactDOM from \"react-dom\";\nimport Root from \"./Root\";\nimport store from \"./store/store\";\nimport { Provider } from \"react-redux\";\nimport { Web3ContextProvider } from \"./hooks\";\nimport { SnackbarProvider } from \"notistack\";\nimport SnackMessage from \"./components/Messages/snackbar\";\n\nReactDOM.render(\n    <SnackbarProvider\n        maxSnack={4}\n        anchorOrigin={{\n            vertical: \"bottom\",\n            horizontal: \"right\",\n        }}\n        content={(key, message: string) => <SnackMessage id={key} message={JSON.parse(message)} />}\n        autoHideDuration={10000}\n    >\n        <Provider store={store}>\n            <Web3ContextProvider>\n                <Root />\n            </Web3ContextProvider>\n        </Provider>\n    </SnackbarProvider>,\n    document.getElementById(\"root\"),\n);\n"],"sourceRoot":""}